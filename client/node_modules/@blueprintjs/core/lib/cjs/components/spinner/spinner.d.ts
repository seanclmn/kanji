import * as React from "react";
import { AbstractPureComponent2 } from "../../common";
import { IntentProps, Props } from "../../common/props";
export declare enum SpinnerSize {
    SMALL = 20,
    STANDARD = 50,
    LARGE = 100
}
export declare type SpinnerProps = (ISpinnerProps & React.HTMLAttributes<any>) | (ISpinnerProps & React.SVGAttributes<any>);
/** @deprecated use SpinnerProps */
export interface ISpinnerProps extends Props, IntentProps {
    /**
     * Width and height of the spinner in pixels. The size cannot be less than
     * 10px.
     *
     * Constants are available for common sizes:
     * - `SpinnerSize.SMALL = 20px`
     * - `SpinnerSize.STANDARD = 50px`
     * - `SpinnerSize.LARGE = 100px`
     *
     * @default SpinnerSize.STANDARD = 50
     */
    size?: number;
    /**
     * HTML tag for the two wrapper elements. If rendering a `<Spinner>` inside
     * an `<svg>`, change this to an SVG element like `"g"`.
     *
     * @default "div"
     */
    tagName?: keyof JSX.IntrinsicElements;
    /**
     * A value between 0 and 1 (inclusive) representing how far along the operation is.
     * Values below 0 or above 1 will be interpreted as 0 or 1 respectively.
     * Omitting this prop will result in an "indeterminate" spinner where the head spins indefinitely.
     */
    value?: number;
}
export declare class Spinner extends AbstractPureComponent2<SpinnerProps> {
    static displayName: string;
    componentDidUpdate(prevProps: SpinnerProps): void;
    render(): React.DOMElement<{
        size?: number | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        contentEditable?: "inherit" | (boolean | "false" | "true") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "false" | "true") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "false" | "true") | undefined;
        style?: React.CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role: string;
        about?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        resource?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "search" | "numeric" | "none" | "url" | "text" | "decimal" | "tel" | "email" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: boolean | "false" | "true" | undefined;
        'aria-autocomplete'?: "inline" | "both" | "none" | "list" | undefined;
        'aria-busy'?: boolean | "false" | "true" | undefined;
        'aria-checked'?: boolean | "mixed" | "false" | "true" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "location" | "time" | "false" | "page" | "true" | "step" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: boolean | "false" | "true" | undefined;
        'aria-dropeffect'?: "link" | "none" | "copy" | "move" | "execute" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: boolean | "false" | "true" | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: boolean | "false" | "true" | undefined;
        'aria-haspopup'?: boolean | "grid" | "dialog" | "menu" | "false" | "listbox" | "true" | "tree" | undefined;
        'aria-hidden'?: boolean | "false" | "true" | undefined;
        'aria-invalid'?: boolean | "false" | "true" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: boolean | "false" | "true" | undefined;
        'aria-multiline'?: boolean | "false" | "true" | undefined;
        'aria-multiselectable'?: boolean | "false" | "true" | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "mixed" | "false" | "true" | undefined;
        'aria-readonly'?: boolean | "false" | "true" | undefined;
        'aria-relevant'?: "all" | "text" | "additions" | "additions removals" | "additions text" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: boolean | "false" | "true" | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: boolean | "false" | "true" | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "other" | "ascending" | "descending" | undefined;
        "aria-valuemax": number;
        "aria-valuemin": number;
        "aria-valuenow": number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: React.ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string;
        } | undefined;
        onCopy?: React.ClipboardEventHandler<any> | undefined;
        onCopyCapture?: React.ClipboardEventHandler<any> | undefined;
        onCut?: React.ClipboardEventHandler<any> | undefined;
        onCutCapture?: React.ClipboardEventHandler<any> | undefined;
        onPaste?: React.ClipboardEventHandler<any> | undefined;
        onPasteCapture?: React.ClipboardEventHandler<any> | undefined;
        onCompositionEnd?: React.CompositionEventHandler<any> | undefined;
        onCompositionEndCapture?: React.CompositionEventHandler<any> | undefined;
        onCompositionStart?: React.CompositionEventHandler<any> | undefined;
        onCompositionStartCapture?: React.CompositionEventHandler<any> | undefined;
        onCompositionUpdate?: React.CompositionEventHandler<any> | undefined;
        onCompositionUpdateCapture?: React.CompositionEventHandler<any> | undefined;
        onFocus?: React.FocusEventHandler<any> | undefined;
        onFocusCapture?: React.FocusEventHandler<any> | undefined;
        onBlur?: React.FocusEventHandler<any> | undefined;
        onBlurCapture?: React.FocusEventHandler<any> | undefined;
        onChange?: React.FormEventHandler<any> | undefined;
        onChangeCapture?: React.FormEventHandler<any> | undefined;
        onBeforeInput?: React.FormEventHandler<any> | undefined;
        onBeforeInputCapture?: React.FormEventHandler<any> | undefined;
        onInput?: React.FormEventHandler<any> | undefined;
        onInputCapture?: React.FormEventHandler<any> | undefined;
        onReset?: React.FormEventHandler<any> | undefined;
        onResetCapture?: React.FormEventHandler<any> | undefined;
        onSubmit?: React.FormEventHandler<any> | undefined;
        onSubmitCapture?: React.FormEventHandler<any> | undefined;
        onInvalid?: React.FormEventHandler<any> | undefined;
        onInvalidCapture?: React.FormEventHandler<any> | undefined;
        onLoad?: React.ReactEventHandler<any> | undefined;
        onLoadCapture?: React.ReactEventHandler<any> | undefined;
        onError?: React.ReactEventHandler<any> | undefined;
        onErrorCapture?: React.ReactEventHandler<any> | undefined;
        onKeyDown?: React.KeyboardEventHandler<any> | undefined;
        onKeyDownCapture?: React.KeyboardEventHandler<any> | undefined;
        onKeyPress?: React.KeyboardEventHandler<any> | undefined;
        onKeyPressCapture?: React.KeyboardEventHandler<any> | undefined;
        onKeyUp?: React.KeyboardEventHandler<any> | undefined;
        onKeyUpCapture?: React.KeyboardEventHandler<any> | undefined;
        onAbort?: React.ReactEventHandler<any> | undefined;
        onAbortCapture?: React.ReactEventHandler<any> | undefined;
        onCanPlay?: React.ReactEventHandler<any> | undefined;
        onCanPlayCapture?: React.ReactEventHandler<any> | undefined;
        onCanPlayThrough?: React.ReactEventHandler<any> | undefined;
        onCanPlayThroughCapture?: React.ReactEventHandler<any> | undefined;
        onDurationChange?: React.ReactEventHandler<any> | undefined;
        onDurationChangeCapture?: React.ReactEventHandler<any> | undefined;
        onEmptied?: React.ReactEventHandler<any> | undefined;
        onEmptiedCapture?: React.ReactEventHandler<any> | undefined;
        onEncrypted?: React.ReactEventHandler<any> | undefined;
        onEncryptedCapture?: React.ReactEventHandler<any> | undefined;
        onEnded?: React.ReactEventHandler<any> | undefined;
        onEndedCapture?: React.ReactEventHandler<any> | undefined;
        onLoadedData?: React.ReactEventHandler<any> | undefined;
        onLoadedDataCapture?: React.ReactEventHandler<any> | undefined;
        onLoadedMetadata?: React.ReactEventHandler<any> | undefined;
        onLoadedMetadataCapture?: React.ReactEventHandler<any> | undefined;
        onLoadStart?: React.ReactEventHandler<any> | undefined;
        onLoadStartCapture?: React.ReactEventHandler<any> | undefined;
        onPause?: React.ReactEventHandler<any> | undefined;
        onPauseCapture?: React.ReactEventHandler<any> | undefined;
        onPlay?: React.ReactEventHandler<any> | undefined;
        onPlayCapture?: React.ReactEventHandler<any> | undefined;
        onPlaying?: React.ReactEventHandler<any> | undefined;
        onPlayingCapture?: React.ReactEventHandler<any> | undefined;
        onProgress?: React.ReactEventHandler<any> | undefined;
        onProgressCapture?: React.ReactEventHandler<any> | undefined;
        onRateChange?: React.ReactEventHandler<any> | undefined;
        onRateChangeCapture?: React.ReactEventHandler<any> | undefined;
        onSeeked?: React.ReactEventHandler<any> | undefined;
        onSeekedCapture?: React.ReactEventHandler<any> | undefined;
        onSeeking?: React.ReactEventHandler<any> | undefined;
        onSeekingCapture?: React.ReactEventHandler<any> | undefined;
        onStalled?: React.ReactEventHandler<any> | undefined;
        onStalledCapture?: React.ReactEventHandler<any> | undefined;
        onSuspend?: React.ReactEventHandler<any> | undefined;
        onSuspendCapture?: React.ReactEventHandler<any> | undefined;
        onTimeUpdate?: React.ReactEventHandler<any> | undefined;
        onTimeUpdateCapture?: React.ReactEventHandler<any> | undefined;
        onVolumeChange?: React.ReactEventHandler<any> | undefined;
        onVolumeChangeCapture?: React.ReactEventHandler<any> | undefined;
        onWaiting?: React.ReactEventHandler<any> | undefined;
        onWaitingCapture?: React.ReactEventHandler<any> | undefined;
        onAuxClick?: React.MouseEventHandler<any> | undefined;
        onAuxClickCapture?: React.MouseEventHandler<any> | undefined;
        onClick?: React.MouseEventHandler<any> | undefined;
        onClickCapture?: React.MouseEventHandler<any> | undefined;
        onContextMenu?: React.MouseEventHandler<any> | undefined;
        onContextMenuCapture?: React.MouseEventHandler<any> | undefined;
        onDoubleClick?: React.MouseEventHandler<any> | undefined;
        onDoubleClickCapture?: React.MouseEventHandler<any> | undefined;
        onDrag?: React.DragEventHandler<any> | undefined;
        onDragCapture?: React.DragEventHandler<any> | undefined;
        onDragEnd?: React.DragEventHandler<any> | undefined;
        onDragEndCapture?: React.DragEventHandler<any> | undefined;
        onDragEnter?: React.DragEventHandler<any> | undefined;
        onDragEnterCapture?: React.DragEventHandler<any> | undefined;
        onDragExit?: React.DragEventHandler<any> | undefined;
        onDragExitCapture?: React.DragEventHandler<any> | undefined;
        onDragLeave?: React.DragEventHandler<any> | undefined;
        onDragLeaveCapture?: React.DragEventHandler<any> | undefined;
        onDragOver?: React.DragEventHandler<any> | undefined;
        onDragOverCapture?: React.DragEventHandler<any> | undefined;
        onDragStart?: React.DragEventHandler<any> | undefined;
        onDragStartCapture?: React.DragEventHandler<any> | undefined;
        onDrop?: React.DragEventHandler<any> | undefined;
        onDropCapture?: React.DragEventHandler<any> | undefined;
        onMouseDown?: React.MouseEventHandler<any> | undefined;
        onMouseDownCapture?: React.MouseEventHandler<any> | undefined;
        onMouseEnter?: React.MouseEventHandler<any> | undefined;
        onMouseLeave?: React.MouseEventHandler<any> | undefined;
        onMouseMove?: React.MouseEventHandler<any> | undefined;
        onMouseMoveCapture?: React.MouseEventHandler<any> | undefined;
        onMouseOut?: React.MouseEventHandler<any> | undefined;
        onMouseOutCapture?: React.MouseEventHandler<any> | undefined;
        onMouseOver?: React.MouseEventHandler<any> | undefined;
        onMouseOverCapture?: React.MouseEventHandler<any> | undefined;
        onMouseUp?: React.MouseEventHandler<any> | undefined;
        onMouseUpCapture?: React.MouseEventHandler<any> | undefined;
        onSelect?: React.ReactEventHandler<any> | undefined;
        onSelectCapture?: React.ReactEventHandler<any> | undefined;
        onTouchCancel?: React.TouchEventHandler<any> | undefined;
        onTouchCancelCapture?: React.TouchEventHandler<any> | undefined;
        onTouchEnd?: React.TouchEventHandler<any> | undefined;
        onTouchEndCapture?: React.TouchEventHandler<any> | undefined;
        onTouchMove?: React.TouchEventHandler<any> | undefined;
        onTouchMoveCapture?: React.TouchEventHandler<any> | undefined;
        onTouchStart?: React.TouchEventHandler<any> | undefined;
        onTouchStartCapture?: React.TouchEventHandler<any> | undefined;
        onPointerDown?: React.PointerEventHandler<any> | undefined;
        onPointerDownCapture?: React.PointerEventHandler<any> | undefined;
        onPointerMove?: React.PointerEventHandler<any> | undefined;
        onPointerMoveCapture?: React.PointerEventHandler<any> | undefined;
        onPointerUp?: React.PointerEventHandler<any> | undefined;
        onPointerUpCapture?: React.PointerEventHandler<any> | undefined;
        onPointerCancel?: React.PointerEventHandler<any> | undefined;
        onPointerCancelCapture?: React.PointerEventHandler<any> | undefined;
        onPointerEnter?: React.PointerEventHandler<any> | undefined;
        onPointerEnterCapture?: React.PointerEventHandler<any> | undefined;
        onPointerLeave?: React.PointerEventHandler<any> | undefined;
        onPointerLeaveCapture?: React.PointerEventHandler<any> | undefined;
        onPointerOver?: React.PointerEventHandler<any> | undefined;
        onPointerOverCapture?: React.PointerEventHandler<any> | undefined;
        onPointerOut?: React.PointerEventHandler<any> | undefined;
        onPointerOutCapture?: React.PointerEventHandler<any> | undefined;
        onGotPointerCapture?: React.PointerEventHandler<any> | undefined;
        onGotPointerCaptureCapture?: React.PointerEventHandler<any> | undefined;
        onLostPointerCapture?: React.PointerEventHandler<any> | undefined;
        onLostPointerCaptureCapture?: React.PointerEventHandler<any> | undefined;
        onScroll?: React.UIEventHandler<any> | undefined;
        onScrollCapture?: React.UIEventHandler<any> | undefined;
        onWheel?: React.WheelEventHandler<any> | undefined;
        onWheelCapture?: React.WheelEventHandler<any> | undefined;
        onAnimationStart?: React.AnimationEventHandler<any> | undefined;
        onAnimationStartCapture?: React.AnimationEventHandler<any> | undefined;
        onAnimationEnd?: React.AnimationEventHandler<any> | undefined;
        onAnimationEndCapture?: React.AnimationEventHandler<any> | undefined;
        onAnimationIteration?: React.AnimationEventHandler<any> | undefined;
        onAnimationIterationCapture?: React.AnimationEventHandler<any> | undefined;
        onTransitionEnd?: React.TransitionEventHandler<any> | undefined;
        onTransitionEndCapture?: React.TransitionEventHandler<any> | undefined;
        className: string;
    } | {
        size?: number | undefined;
        color?: string | undefined;
        height?: string | number | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        max?: string | number | undefined;
        media?: string | undefined;
        method?: string | undefined;
        min?: string | number | undefined;
        name?: string | undefined;
        style?: React.CSSProperties | undefined;
        target?: string | undefined;
        type?: string | undefined;
        width?: string | number | undefined;
        role: string;
        tabIndex?: number | undefined;
        crossOrigin?: "" | "anonymous" | "use-credentials" | undefined;
        accentHeight?: string | number | undefined;
        accumulate?: "none" | "sum" | undefined;
        additive?: "replace" | "sum" | undefined;
        alignmentBaseline?: "auto" | "inherit" | "alphabetic" | "hanging" | "ideographic" | "middle" | "baseline" | "after-edge" | "before-edge" | "central" | "mathematical" | "text-after-edge" | "text-before-edge" | undefined;
        allowReorder?: "yes" | "no" | undefined;
        alphabetic?: string | number | undefined;
        amplitude?: string | number | undefined;
        arabicForm?: "initial" | "medial" | "terminal" | "isolated" | undefined;
        ascent?: string | number | undefined;
        attributeName?: string | undefined;
        attributeType?: string | undefined;
        autoReverse?: (boolean | "false" | "true") | undefined;
        azimuth?: string | number | undefined;
        baseFrequency?: string | number | undefined;
        baselineShift?: string | number | undefined;
        baseProfile?: string | number | undefined;
        bbox?: string | number | undefined;
        begin?: string | number | undefined;
        bias?: string | number | undefined;
        by?: string | number | undefined;
        calcMode?: string | number | undefined;
        capHeight?: string | number | undefined;
        clip?: string | number | undefined;
        clipPath?: string | undefined;
        clipPathUnits?: string | number | undefined;
        clipRule?: string | number | undefined;
        colorInterpolation?: string | number | undefined;
        colorInterpolationFilters?: "auto" | "inherit" | "linearRGB" | "sRGB" | undefined;
        colorProfile?: string | number | undefined;
        colorRendering?: string | number | undefined;
        contentScriptType?: string | number | undefined;
        contentStyleType?: string | number | undefined;
        cursor?: string | number | undefined;
        cx?: string | number | undefined;
        cy?: string | number | undefined;
        d?: string | undefined;
        decelerate?: string | number | undefined;
        descent?: string | number | undefined;
        diffuseConstant?: string | number | undefined;
        direction?: string | number | undefined;
        display?: string | number | undefined;
        divisor?: string | number | undefined;
        dominantBaseline?: string | number | undefined;
        dur?: string | number | undefined;
        dx?: string | number | undefined;
        dy?: string | number | undefined;
        edgeMode?: string | number | undefined;
        elevation?: string | number | undefined;
        enableBackground?: string | number | undefined;
        end?: string | number | undefined;
        exponent?: string | number | undefined;
        externalResourcesRequired?: (boolean | "false" | "true") | undefined;
        fill?: string | undefined;
        fillOpacity?: string | number | undefined;
        fillRule?: "evenodd" | "nonzero" | "inherit" | undefined;
        filter?: string | undefined;
        filterRes?: string | number | undefined;
        filterUnits?: string | number | undefined;
        floodColor?: string | number | undefined;
        floodOpacity?: string | number | undefined;
        focusable?: "auto" | (boolean | "false" | "true") | undefined;
        fontFamily?: string | undefined;
        fontSize?: string | number | undefined;
        fontSizeAdjust?: string | number | undefined;
        fontStretch?: string | number | undefined;
        fontStyle?: string | number | undefined;
        fontVariant?: string | number | undefined;
        fontWeight?: string | number | undefined;
        format?: string | number | undefined;
        from?: string | number | undefined;
        fx?: string | number | undefined;
        fy?: string | number | undefined;
        g1?: string | number | undefined;
        g2?: string | number | undefined;
        glyphName?: string | number | undefined;
        glyphOrientationHorizontal?: string | number | undefined;
        glyphOrientationVertical?: string | number | undefined;
        glyphRef?: string | number | undefined;
        gradientTransform?: string | undefined;
        gradientUnits?: string | undefined;
        hanging?: string | number | undefined;
        horizAdvX?: string | number | undefined;
        horizOriginX?: string | number | undefined;
        href?: string | undefined;
        ideographic?: string | number | undefined;
        imageRendering?: string | number | undefined;
        in2?: string | number | undefined;
        in?: string | undefined;
        intercept?: string | number | undefined;
        k1?: string | number | undefined;
        k2?: string | number | undefined;
        k3?: string | number | undefined;
        k4?: string | number | undefined;
        k?: string | number | undefined;
        kernelMatrix?: string | number | undefined;
        kernelUnitLength?: string | number | undefined;
        kerning?: string | number | undefined;
        keyPoints?: string | number | undefined;
        keySplines?: string | number | undefined;
        keyTimes?: string | number | undefined;
        lengthAdjust?: string | number | undefined;
        letterSpacing?: string | number | undefined;
        lightingColor?: string | number | undefined;
        limitingConeAngle?: string | number | undefined;
        local?: string | number | undefined;
        markerEnd?: string | undefined;
        markerHeight?: string | number | undefined;
        markerMid?: string | undefined;
        markerStart?: string | undefined;
        markerUnits?: string | number | undefined;
        markerWidth?: string | number | undefined;
        mask?: string | undefined;
        maskContentUnits?: string | number | undefined;
        maskUnits?: string | number | undefined;
        mathematical?: string | number | undefined;
        mode?: string | number | undefined;
        numOctaves?: string | number | undefined;
        offset?: string | number | undefined;
        opacity?: string | number | undefined;
        operator?: string | number | undefined;
        order?: string | number | undefined;
        orient?: string | number | undefined;
        orientation?: string | number | undefined;
        origin?: string | number | undefined;
        overflow?: string | number | undefined;
        overlinePosition?: string | number | undefined;
        overlineThickness?: string | number | undefined;
        paintOrder?: string | number | undefined;
        panose1?: string | number | undefined;
        path?: string | undefined;
        pathLength?: string | number | undefined;
        patternContentUnits?: string | undefined;
        patternTransform?: string | number | undefined;
        patternUnits?: string | undefined;
        pointerEvents?: string | number | undefined;
        points?: string | undefined;
        pointsAtX?: string | number | undefined;
        pointsAtY?: string | number | undefined;
        pointsAtZ?: string | number | undefined;
        preserveAlpha?: (boolean | "false" | "true") | undefined;
        preserveAspectRatio?: string | undefined;
        primitiveUnits?: string | number | undefined;
        r?: string | number | undefined;
        radius?: string | number | undefined;
        refX?: string | number | undefined;
        refY?: string | number | undefined;
        renderingIntent?: string | number | undefined;
        repeatCount?: string | number | undefined;
        repeatDur?: string | number | undefined;
        requiredExtensions?: string | number | undefined;
        requiredFeatures?: string | number | undefined;
        restart?: string | number | undefined;
        result?: string | undefined;
        rotate?: string | number | undefined;
        rx?: string | number | undefined;
        ry?: string | number | undefined;
        scale?: string | number | undefined;
        seed?: string | number | undefined;
        shapeRendering?: string | number | undefined;
        slope?: string | number | undefined;
        spacing?: string | number | undefined;
        specularConstant?: string | number | undefined;
        specularExponent?: string | number | undefined;
        speed?: string | number | undefined;
        spreadMethod?: string | undefined;
        startOffset?: string | number | undefined;
        stdDeviation?: string | number | undefined;
        stemh?: string | number | undefined;
        stemv?: string | number | undefined;
        stitchTiles?: string | number | undefined;
        stopColor?: string | undefined;
        stopOpacity?: string | number | undefined;
        strikethroughPosition?: string | number | undefined;
        strikethroughThickness?: string | number | undefined;
        string?: string | number | undefined;
        stroke?: string | undefined;
        strokeDasharray?: string | number | undefined;
        strokeDashoffset?: string | number | undefined;
        strokeLinecap?: "square" | "butt" | "round" | "inherit" | undefined;
        strokeLinejoin?: "round" | "bevel" | "miter" | "inherit" | undefined;
        strokeMiterlimit?: string | number | undefined;
        strokeOpacity?: string | number | undefined;
        strokeWidth?: string | number | undefined;
        surfaceScale?: string | number | undefined;
        systemLanguage?: string | number | undefined;
        tableValues?: string | number | undefined;
        targetX?: string | number | undefined;
        targetY?: string | number | undefined;
        textAnchor?: string | undefined;
        textDecoration?: string | number | undefined;
        textLength?: string | number | undefined;
        textRendering?: string | number | undefined;
        to?: string | number | undefined;
        transform?: string | undefined;
        u1?: string | number | undefined;
        u2?: string | number | undefined;
        underlinePosition?: string | number | undefined;
        underlineThickness?: string | number | undefined;
        unicode?: string | number | undefined;
        unicodeBidi?: string | number | undefined;
        unicodeRange?: string | number | undefined;
        unitsPerEm?: string | number | undefined;
        vAlphabetic?: string | number | undefined;
        values?: string | undefined;
        vectorEffect?: string | number | undefined;
        version?: string | undefined;
        vertAdvY?: string | number | undefined;
        vertOriginX?: string | number | undefined;
        vertOriginY?: string | number | undefined;
        vHanging?: string | number | undefined;
        vIdeographic?: string | number | undefined;
        viewBox?: string | undefined;
        viewTarget?: string | number | undefined;
        visibility?: string | number | undefined;
        vMathematical?: string | number | undefined;
        widths?: string | number | undefined;
        wordSpacing?: string | number | undefined;
        writingMode?: string | number | undefined;
        x1?: string | number | undefined;
        x2?: string | number | undefined;
        x?: string | number | undefined;
        xChannelSelector?: string | undefined;
        xHeight?: string | number | undefined;
        xlinkActuate?: string | undefined;
        xlinkArcrole?: string | undefined;
        xlinkHref?: string | undefined;
        xlinkRole?: string | undefined;
        xlinkShow?: string | undefined;
        xlinkTitle?: string | undefined;
        xlinkType?: string | undefined;
        xmlBase?: string | undefined;
        xmlLang?: string | undefined;
        xmlns?: string | undefined;
        xmlnsXlink?: string | undefined;
        xmlSpace?: string | undefined;
        y1?: string | number | undefined;
        y2?: string | number | undefined;
        y?: string | number | undefined;
        yChannelSelector?: string | undefined;
        z?: string | number | undefined;
        zoomAndPan?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: boolean | "false" | "true" | undefined;
        'aria-autocomplete'?: "inline" | "both" | "none" | "list" | undefined;
        'aria-busy'?: boolean | "false" | "true" | undefined;
        'aria-checked'?: boolean | "mixed" | "false" | "true" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "location" | "time" | "false" | "page" | "true" | "step" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: boolean | "false" | "true" | undefined;
        'aria-dropeffect'?: "link" | "none" | "copy" | "move" | "execute" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: boolean | "false" | "true" | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: boolean | "false" | "true" | undefined;
        'aria-haspopup'?: boolean | "grid" | "dialog" | "menu" | "false" | "listbox" | "true" | "tree" | undefined;
        'aria-hidden'?: boolean | "false" | "true" | undefined;
        'aria-invalid'?: boolean | "false" | "true" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: boolean | "false" | "true" | undefined;
        'aria-multiline'?: boolean | "false" | "true" | undefined;
        'aria-multiselectable'?: boolean | "false" | "true" | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "mixed" | "false" | "true" | undefined;
        'aria-readonly'?: boolean | "false" | "true" | undefined;
        'aria-relevant'?: "all" | "text" | "additions" | "additions removals" | "additions text" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: boolean | "false" | "true" | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: boolean | "false" | "true" | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "other" | "ascending" | "descending" | undefined;
        "aria-valuemax": number;
        "aria-valuemin": number;
        "aria-valuenow": number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: React.ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string;
        } | undefined;
        onCopy?: React.ClipboardEventHandler<any> | undefined;
        onCopyCapture?: React.ClipboardEventHandler<any> | undefined;
        onCut?: React.ClipboardEventHandler<any> | undefined;
        onCutCapture?: React.ClipboardEventHandler<any> | undefined;
        onPaste?: React.ClipboardEventHandler<any> | undefined;
        onPasteCapture?: React.ClipboardEventHandler<any> | undefined;
        onCompositionEnd?: React.CompositionEventHandler<any> | undefined;
        onCompositionEndCapture?: React.CompositionEventHandler<any> | undefined;
        onCompositionStart?: React.CompositionEventHandler<any> | undefined;
        onCompositionStartCapture?: React.CompositionEventHandler<any> | undefined;
        onCompositionUpdate?: React.CompositionEventHandler<any> | undefined;
        onCompositionUpdateCapture?: React.CompositionEventHandler<any> | undefined;
        onFocus?: React.FocusEventHandler<any> | undefined;
        onFocusCapture?: React.FocusEventHandler<any> | undefined;
        onBlur?: React.FocusEventHandler<any> | undefined;
        onBlurCapture?: React.FocusEventHandler<any> | undefined;
        onChange?: React.FormEventHandler<any> | undefined;
        onChangeCapture?: React.FormEventHandler<any> | undefined;
        onBeforeInput?: React.FormEventHandler<any> | undefined;
        onBeforeInputCapture?: React.FormEventHandler<any> | undefined;
        onInput?: React.FormEventHandler<any> | undefined;
        onInputCapture?: React.FormEventHandler<any> | undefined;
        onReset?: React.FormEventHandler<any> | undefined;
        onResetCapture?: React.FormEventHandler<any> | undefined;
        onSubmit?: React.FormEventHandler<any> | undefined;
        onSubmitCapture?: React.FormEventHandler<any> | undefined;
        onInvalid?: React.FormEventHandler<any> | undefined;
        onInvalidCapture?: React.FormEventHandler<any> | undefined;
        onLoad?: React.ReactEventHandler<any> | undefined;
        onLoadCapture?: React.ReactEventHandler<any> | undefined;
        onError?: React.ReactEventHandler<any> | undefined;
        onErrorCapture?: React.ReactEventHandler<any> | undefined;
        onKeyDown?: React.KeyboardEventHandler<any> | undefined;
        onKeyDownCapture?: React.KeyboardEventHandler<any> | undefined;
        onKeyPress?: React.KeyboardEventHandler<any> | undefined;
        onKeyPressCapture?: React.KeyboardEventHandler<any> | undefined;
        onKeyUp?: React.KeyboardEventHandler<any> | undefined;
        onKeyUpCapture?: React.KeyboardEventHandler<any> | undefined;
        onAbort?: React.ReactEventHandler<any> | undefined;
        onAbortCapture?: React.ReactEventHandler<any> | undefined;
        onCanPlay?: React.ReactEventHandler<any> | undefined;
        onCanPlayCapture?: React.ReactEventHandler<any> | undefined;
        onCanPlayThrough?: React.ReactEventHandler<any> | undefined;
        onCanPlayThroughCapture?: React.ReactEventHandler<any> | undefined;
        onDurationChange?: React.ReactEventHandler<any> | undefined;
        onDurationChangeCapture?: React.ReactEventHandler<any> | undefined;
        onEmptied?: React.ReactEventHandler<any> | undefined;
        onEmptiedCapture?: React.ReactEventHandler<any> | undefined;
        onEncrypted?: React.ReactEventHandler<any> | undefined;
        onEncryptedCapture?: React.ReactEventHandler<any> | undefined;
        onEnded?: React.ReactEventHandler<any> | undefined;
        onEndedCapture?: React.ReactEventHandler<any> | undefined;
        onLoadedData?: React.ReactEventHandler<any> | undefined;
        onLoadedDataCapture?: React.ReactEventHandler<any> | undefined;
        onLoadedMetadata?: React.ReactEventHandler<any> | undefined;
        onLoadedMetadataCapture?: React.ReactEventHandler<any> | undefined;
        onLoadStart?: React.ReactEventHandler<any> | undefined;
        onLoadStartCapture?: React.ReactEventHandler<any> | undefined;
        onPause?: React.ReactEventHandler<any> | undefined;
        onPauseCapture?: React.ReactEventHandler<any> | undefined;
        onPlay?: React.ReactEventHandler<any> | undefined;
        onPlayCapture?: React.ReactEventHandler<any> | undefined;
        onPlaying?: React.ReactEventHandler<any> | undefined;
        onPlayingCapture?: React.ReactEventHandler<any> | undefined;
        onProgress?: React.ReactEventHandler<any> | undefined;
        onProgressCapture?: React.ReactEventHandler<any> | undefined;
        onRateChange?: React.ReactEventHandler<any> | undefined;
        onRateChangeCapture?: React.ReactEventHandler<any> | undefined;
        onSeeked?: React.ReactEventHandler<any> | undefined;
        onSeekedCapture?: React.ReactEventHandler<any> | undefined;
        onSeeking?: React.ReactEventHandler<any> | undefined;
        onSeekingCapture?: React.ReactEventHandler<any> | undefined;
        onStalled?: React.ReactEventHandler<any> | undefined;
        onStalledCapture?: React.ReactEventHandler<any> | undefined;
        onSuspend?: React.ReactEventHandler<any> | undefined;
        onSuspendCapture?: React.ReactEventHandler<any> | undefined;
        onTimeUpdate?: React.ReactEventHandler<any> | undefined;
        onTimeUpdateCapture?: React.ReactEventHandler<any> | undefined;
        onVolumeChange?: React.ReactEventHandler<any> | undefined;
        onVolumeChangeCapture?: React.ReactEventHandler<any> | undefined;
        onWaiting?: React.ReactEventHandler<any> | undefined;
        onWaitingCapture?: React.ReactEventHandler<any> | undefined;
        onAuxClick?: React.MouseEventHandler<any> | undefined;
        onAuxClickCapture?: React.MouseEventHandler<any> | undefined;
        onClick?: React.MouseEventHandler<any> | undefined;
        onClickCapture?: React.MouseEventHandler<any> | undefined;
        onContextMenu?: React.MouseEventHandler<any> | undefined;
        onContextMenuCapture?: React.MouseEventHandler<any> | undefined;
        onDoubleClick?: React.MouseEventHandler<any> | undefined;
        onDoubleClickCapture?: React.MouseEventHandler<any> | undefined;
        onDrag?: React.DragEventHandler<any> | undefined;
        onDragCapture?: React.DragEventHandler<any> | undefined;
        onDragEnd?: React.DragEventHandler<any> | undefined;
        onDragEndCapture?: React.DragEventHandler<any> | undefined;
        onDragEnter?: React.DragEventHandler<any> | undefined;
        onDragEnterCapture?: React.DragEventHandler<any> | undefined;
        onDragExit?: React.DragEventHandler<any> | undefined;
        onDragExitCapture?: React.DragEventHandler<any> | undefined;
        onDragLeave?: React.DragEventHandler<any> | undefined;
        onDragLeaveCapture?: React.DragEventHandler<any> | undefined;
        onDragOver?: React.DragEventHandler<any> | undefined;
        onDragOverCapture?: React.DragEventHandler<any> | undefined;
        onDragStart?: React.DragEventHandler<any> | undefined;
        onDragStartCapture?: React.DragEventHandler<any> | undefined;
        onDrop?: React.DragEventHandler<any> | undefined;
        onDropCapture?: React.DragEventHandler<any> | undefined;
        onMouseDown?: React.MouseEventHandler<any> | undefined;
        onMouseDownCapture?: React.MouseEventHandler<any> | undefined;
        onMouseEnter?: React.MouseEventHandler<any> | undefined;
        onMouseLeave?: React.MouseEventHandler<any> | undefined;
        onMouseMove?: React.MouseEventHandler<any> | undefined;
        onMouseMoveCapture?: React.MouseEventHandler<any> | undefined;
        onMouseOut?: React.MouseEventHandler<any> | undefined;
        onMouseOutCapture?: React.MouseEventHandler<any> | undefined;
        onMouseOver?: React.MouseEventHandler<any> | undefined;
        onMouseOverCapture?: React.MouseEventHandler<any> | undefined;
        onMouseUp?: React.MouseEventHandler<any> | undefined;
        onMouseUpCapture?: React.MouseEventHandler<any> | undefined;
        onSelect?: React.ReactEventHandler<any> | undefined;
        onSelectCapture?: React.ReactEventHandler<any> | undefined;
        onTouchCancel?: React.TouchEventHandler<any> | undefined;
        onTouchCancelCapture?: React.TouchEventHandler<any> | undefined;
        onTouchEnd?: React.TouchEventHandler<any> | undefined;
        onTouchEndCapture?: React.TouchEventHandler<any> | undefined;
        onTouchMove?: React.TouchEventHandler<any> | undefined;
        onTouchMoveCapture?: React.TouchEventHandler<any> | undefined;
        onTouchStart?: React.TouchEventHandler<any> | undefined;
        onTouchStartCapture?: React.TouchEventHandler<any> | undefined;
        onPointerDown?: React.PointerEventHandler<any> | undefined;
        onPointerDownCapture?: React.PointerEventHandler<any> | undefined;
        onPointerMove?: React.PointerEventHandler<any> | undefined;
        onPointerMoveCapture?: React.PointerEventHandler<any> | undefined;
        onPointerUp?: React.PointerEventHandler<any> | undefined;
        onPointerUpCapture?: React.PointerEventHandler<any> | undefined;
        onPointerCancel?: React.PointerEventHandler<any> | undefined;
        onPointerCancelCapture?: React.PointerEventHandler<any> | undefined;
        onPointerEnter?: React.PointerEventHandler<any> | undefined;
        onPointerEnterCapture?: React.PointerEventHandler<any> | undefined;
        onPointerLeave?: React.PointerEventHandler<any> | undefined;
        onPointerLeaveCapture?: React.PointerEventHandler<any> | undefined;
        onPointerOver?: React.PointerEventHandler<any> | undefined;
        onPointerOverCapture?: React.PointerEventHandler<any> | undefined;
        onPointerOut?: React.PointerEventHandler<any> | undefined;
        onPointerOutCapture?: React.PointerEventHandler<any> | undefined;
        onGotPointerCapture?: React.PointerEventHandler<any> | undefined;
        onGotPointerCaptureCapture?: React.PointerEventHandler<any> | undefined;
        onLostPointerCapture?: React.PointerEventHandler<any> | undefined;
        onLostPointerCaptureCapture?: React.PointerEventHandler<any> | undefined;
        onScroll?: React.UIEventHandler<any> | undefined;
        onScrollCapture?: React.UIEventHandler<any> | undefined;
        onWheel?: React.WheelEventHandler<any> | undefined;
        onWheelCapture?: React.WheelEventHandler<any> | undefined;
        onAnimationStart?: React.AnimationEventHandler<any> | undefined;
        onAnimationStartCapture?: React.AnimationEventHandler<any> | undefined;
        onAnimationEnd?: React.AnimationEventHandler<any> | undefined;
        onAnimationEndCapture?: React.AnimationEventHandler<any> | undefined;
        onAnimationIteration?: React.AnimationEventHandler<any> | undefined;
        onAnimationIterationCapture?: React.AnimationEventHandler<any> | undefined;
        onTransitionEnd?: React.TransitionEventHandler<any> | undefined;
        onTransitionEndCapture?: React.TransitionEventHandler<any> | undefined;
        className: string;
    }, Element>;
    protected validateProps({ className, size }: SpinnerProps): void;
    /**
     * Resolve size to a pixel value.
     * Size can be set by className, props, default, or minimum constant.
     */
    private getSize;
    /** Compute viewbox such that stroked track sits exactly at edge of image frame. */
    private getViewBox;
}
