{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useMantineDefaultProps } from '@mantine/styles';\nimport { RenderList } from './RenderList/RenderList.js';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea.js';\nimport { DefaultItem } from './DefaultItem/DefaultItem.js';\nimport { useSelectionState } from './use-selection-state/use-selection-state.js';\nimport { SimpleGrid } from '../SimpleGrid/SimpleGrid.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction defaultFilter(query, item) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nconst defaultProps = {\n  itemComponent: DefaultItem,\n  filter: defaultFilter,\n  titles: [null, null],\n  listHeight: 150,\n  listComponent: SelectScrollArea,\n  showTransferAll: true,\n  limit: Infinity\n};\nconst TransferList = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"TransferList\", defaultProps, props),\n        {\n    value,\n    onChange,\n    itemComponent,\n    searchPlaceholder,\n    filter,\n    nothingFound,\n    titles,\n    initialSelection,\n    listHeight,\n    listComponent,\n    showTransferAll,\n    breakpoint,\n    radius,\n    classNames,\n    styles,\n    limit\n  } = _a,\n        others = __objRest(_a, [\"value\", \"onChange\", \"itemComponent\", \"searchPlaceholder\", \"filter\", \"nothingFound\", \"titles\", \"initialSelection\", \"listHeight\", \"listComponent\", \"showTransferAll\", \"breakpoint\", \"radius\", \"classNames\", \"styles\", \"limit\"]);\n\n  const [selection, handlers] = useSelectionState(initialSelection);\n\n  const handleMoveAll = listIndex => {\n    const items = Array(2);\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    items[listIndex] = [];\n    items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const handleMove = listIndex => {\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    const items = Array(2);\n    const transferData = value[listIndex].reduce((acc, item) => {\n      if (!selection[listIndex].includes(item.value)) {\n        acc.filtered.push(item);\n      } else {\n        acc.current.push(item);\n      }\n\n      return acc;\n    }, {\n      filtered: [],\n      current: []\n    });\n    items[listIndex] = transferData.filtered;\n    items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const breakpoints = breakpoint ? [{\n    maxWidth: breakpoint,\n    cols: 1\n  }] : [];\n  const sharedListProps = {\n    itemComponent,\n    listComponent,\n    searchPlaceholder,\n    filter,\n    nothingFound,\n    height: listHeight,\n    showTransferAll,\n    classNames,\n    styles,\n    limit,\n    radius\n  };\n  return /* @__PURE__ */React.createElement(SimpleGrid, __spreadValues({\n    cols: 2,\n    spacing: \"xl\",\n    breakpoints,\n    ref\n  }, others), /* @__PURE__ */React.createElement(RenderList, __spreadProps(__spreadValues({}, sharedListProps), {\n    data: value[0],\n    selection: selection[0],\n    onSelect: val => handlers.select(0, val),\n    onMoveAll: () => handleMoveAll(0),\n    onMove: () => handleMove(0),\n    title: titles[0]\n  })), /* @__PURE__ */React.createElement(RenderList, __spreadProps(__spreadValues({}, sharedListProps), {\n    data: value[1],\n    selection: selection[1],\n    onSelect: val => handlers.select(1, val),\n    onMoveAll: () => handleMoveAll(1),\n    onMove: () => handleMove(1),\n    title: titles[1],\n    reversed: true\n  })));\n});\nTransferList.displayName = \"@mantine/core/TransferList\";\nexport { TransferList, defaultFilter };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultFilter","query","item","label","toLowerCase","trim","includes","defaultProps","itemComponent","DefaultItem","filter","titles","listHeight","listComponent","SelectScrollArea","showTransferAll","limit","Infinity","TransferList","forwardRef","props","ref","_a","useMantineDefaultProps","onChange","searchPlaceholder","nothingFound","initialSelection","breakpoint","radius","classNames","styles","others","selection","handlers","useSelectionState","handleMoveAll","listIndex","items","Array","moveToIndex","deselectAll","handleMove","transferData","reduce","acc","filtered","push","current","breakpoints","maxWidth","cols","sharedListProps","height","React","createElement","SimpleGrid","spacing","RenderList","data","onSelect","val","select","onMoveAll","onMove","title","reversed","displayName"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/core/src/components/TransferList/TransferList.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useMantineDefaultProps } from '@mantine/styles';\nimport { RenderList, RenderListStylesNames } from './RenderList/RenderList';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea';\nimport { DefaultItem } from './DefaultItem/DefaultItem';\nimport { SimpleGrid } from '../SimpleGrid';\nimport { useSelectionState, Selection } from './use-selection-state/use-selection-state';\nimport { TransferListData, TransferListItemComponent, TransferListItem } from './types';\n\nexport type TransferListStylesNames = RenderListStylesNames;\n\nexport interface TransferListProps\n  extends DefaultProps<TransferListStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  /** Current value */\n  value: TransferListData;\n\n  /** Called when value changes */\n  onChange(value: TransferListData): void;\n\n  /** Initial items selection */\n  initialSelection?: Selection;\n\n  /** Custom item component */\n  itemComponent?: TransferListItemComponent;\n\n  /** Search fields placeholder */\n  searchPlaceholder?: string;\n\n  /** Nothing found message */\n  nothingFound?: React.ReactNode;\n\n  /** Function to filter search results */\n  filter?(query: string, item: TransferListItem): boolean;\n\n  /** Lists titles */\n  titles?: [string, string];\n\n  /** List items height */\n  listHeight?: number;\n\n  /** Change list component, can be used to add custom scrollbars */\n  listComponent?: any;\n\n  /** Breakpoint at which list will collapse to single column layout */\n  breakpoint?: MantineNumberSize;\n\n  /** Predefined border-radius value from theme.radius or number for border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Whether to hide the transfer all button */\n  showTransferAll?: boolean;\n\n  /** Limit amount of items showed at a time */\n  limit?: number;\n}\n\nexport function defaultFilter(query: string, item: TransferListItem) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nconst defaultProps: Partial<TransferListProps> = {\n  itemComponent: DefaultItem,\n  filter: defaultFilter,\n  titles: [null, null],\n  listHeight: 150,\n  listComponent: SelectScrollArea,\n  showTransferAll: true,\n  limit: Infinity,\n};\n\nexport const TransferList = forwardRef<HTMLDivElement, TransferListProps>(\n  (props: TransferListProps, ref) => {\n    const {\n      value,\n      onChange,\n      itemComponent,\n      searchPlaceholder,\n      filter,\n      nothingFound,\n      titles,\n      initialSelection,\n      listHeight,\n      listComponent,\n      showTransferAll,\n      breakpoint,\n      radius,\n      classNames,\n      styles,\n      limit,\n      ...others\n    } = useMantineDefaultProps('TransferList', defaultProps, props);\n\n    const [selection, handlers] = useSelectionState(initialSelection);\n\n    const handleMoveAll = (listIndex: 0 | 1) => {\n      const items: TransferListData = Array(2) as any;\n      const moveToIndex = listIndex === 0 ? 1 : 0;\n      items[listIndex] = [];\n      items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n      onChange(items);\n      handlers.deselectAll(listIndex);\n    };\n\n    const handleMove = (listIndex: 0 | 1) => {\n      const moveToIndex = listIndex === 0 ? 1 : 0;\n      const items: TransferListData = Array(2) as any;\n      const transferData = value[listIndex].reduce(\n        (acc, item) => {\n          if (!selection[listIndex].includes(item.value)) {\n            acc.filtered.push(item);\n          } else {\n            acc.current.push(item);\n          }\n          return acc;\n        },\n        { filtered: [], current: [] }\n      );\n      items[listIndex] = transferData.filtered;\n      items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n      onChange(items);\n      handlers.deselectAll(listIndex);\n    };\n\n    const breakpoints = breakpoint ? [{ maxWidth: breakpoint, cols: 1 }] : [];\n    const sharedListProps = {\n      itemComponent,\n      listComponent,\n      searchPlaceholder,\n      filter,\n      nothingFound,\n      height: listHeight,\n      showTransferAll,\n      classNames,\n      styles,\n      limit,\n      radius,\n    };\n\n    return (\n      <SimpleGrid cols={2} spacing=\"xl\" breakpoints={breakpoints} ref={ref} {...others}>\n        <RenderList\n          {...sharedListProps}\n          data={value[0]}\n          selection={selection[0]}\n          onSelect={(val) => handlers.select(0, val)}\n          onMoveAll={() => handleMoveAll(0)}\n          onMove={() => handleMove(0)}\n          title={titles[0]}\n        />\n\n        <RenderList\n          {...sharedListProps}\n          data={value[1]}\n          selection={selection[1]}\n          onSelect={(val) => handlers.select(1, val)}\n          onMoveAll={() => handleMoveAll(1)}\n          onMove={() => handleMove(1)}\n          title={titles[1]}\n          reversed\n        />\n      </SimpleGrid>\n    );\n  }\n);\n\nTransferList.displayName = '@mantine/core/TransferList';\n"]},"metadata":{},"sourceType":"module"}