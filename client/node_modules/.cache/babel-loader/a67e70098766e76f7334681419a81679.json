{"ast":null,"code":"// @ts-nocheck\n// Hooks\nimport FetchGradeKanji from './FetchGradeKanji';\nexport function shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\nexport const fetchWrongAnswer = (answer, kanjiArray, answerLength) => {\n  const answers = [];\n  const wrongAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n\n  if (wrongAnswer !== answer) {\n    answers.push(wrongAnswer);\n  }\n\n  if (answers.length < answerLength - 1) {\n    fetchWrongAnswer(answer);\n  } else {\n    answers.push(answer);\n  }\n};\nexport const fetchAnswerOptions = (kanjiLevel, answerLength) => {\n  const questionsArray = [];\n  const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData;\n  const correctAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n\n  for (let i = 0; i < questions; i++) {\n    questionsArray.push({\n      question: \"here's a question son\",\n      answers: fetchWrongAnswers(correctAnswer, kanjiArray, 4)\n    });\n  }\n\n  fetchWrongAnswer();\n  return answers;\n};\nexport const FetchQuizAnswers = (kanjiLevel, questions) => {\n  return shuffle(questionsArray);\n};\n_c = FetchQuizAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchQuizAnswers\");","map":{"version":3,"names":["FetchGradeKanji","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","fetchWrongAnswer","answer","kanjiArray","answerLength","answers","wrongAnswer","push","fetchAnswerOptions","kanjiLevel","questionsArray","gradeKanjiData","correctAnswer","i","questions","question","fetchWrongAnswers","FetchQuizAnswers"],"sources":["/Users/seancoleman/Projects/kanji/src/hooks/FetchQuizAnswers.tsx"],"sourcesContent":["// @ts-nocheck\nimport {useEffect,useState } from 'react'\n\n// Hooks\nimport FetchGradeKanji from './FetchGradeKanji'\n\nexport function shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n\nexport const fetchWrongAnswer = (answer: string,kanjiArray:string[],answerLength:number) => {\n  const answers:string[] = []\n  const wrongAnswer = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\n  \n  if(wrongAnswer!==answer){\n    answers.push(wrongAnswer)!\n  }\n\n  if(answers.length < answerLength-1){\n    fetchWrongAnswer(answer)\n  }\n  else {\n    answers.push(answer)\n  }\n}\n\nexport const fetchAnswerOptions = (kanjiLevel:number,answerLength:number) => {\n\n  const questionsArray:string[][] = []\n  const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData\n  const correctAnswer: string = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\n\n\n  for(let i=0;i<questions;i++) {\n\n    questionsArray.push({ \n      question: \"here's a question son\",\n      answers: fetchWrongAnswers(correctAnswer,kanjiArray,4)\n    })\n  }\n\n\n  fetchWrongAnswer()\n  return answers\n\n}\n\nexport const FetchQuizAnswers = (kanjiLevel:number,questions:number) => {\n\n  return(shuffle(questionsArray))\n}"],"mappings":"AAAA;AAGA;AACA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAC7B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;EAAA,IAAkCC,WAAlC,CAD6B,CAG7B;;EACA,OAAOF,YAAY,IAAI,CAAvB,EAA0B;IAExB;IACAE,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;IACAA,YAAY,GAJY,CAMxB;;IACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EACtBH,KAAK,CAACC,YAAD,CADiB,CAA5C;EAED;;EAED,OAAOD,KAAP;AACD;AAGD,OAAO,MAAMO,gBAAgB,GAAG,CAACC,MAAD,EAAgBC,UAAhB,EAAoCC,YAApC,KAA4D;EAC1F,MAAMC,OAAgB,GAAG,EAAzB;EACA,MAAMC,WAAW,GAAGH,UAAU,CAACL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcG,UAAU,CAACP,MAApC,CAAD,CAA9B;;EAEA,IAAGU,WAAW,KAAGJ,MAAjB,EAAwB;IACtBG,OAAO,CAACE,IAAR,CAAaD,WAAb;EACD;;EAED,IAAGD,OAAO,CAACT,MAAR,GAAiBQ,YAAY,GAAC,CAAjC,EAAmC;IACjCH,gBAAgB,CAACC,MAAD,CAAhB;EACD,CAFD,MAGK;IACHG,OAAO,CAACE,IAAR,CAAaL,MAAb;EACD;AACF,CAdM;AAgBP,OAAO,MAAMM,kBAAkB,GAAG,CAACC,UAAD,EAAmBL,YAAnB,KAA2C;EAE3E,MAAMM,cAAyB,GAAG,EAAlC;EACA,MAAMP,UAAU,GAAGX,eAAe,CAACiB,UAAD,CAAf,CAA4BE,cAA/C;EACA,MAAMC,aAAqB,GAAGT,UAAU,CAACL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcG,UAAU,CAACP,MAApC,CAAD,CAAxC;;EAGA,KAAI,IAAIiB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,SAAd,EAAwBD,CAAC,EAAzB,EAA6B;IAE3BH,cAAc,CAACH,IAAf,CAAoB;MAClBQ,QAAQ,EAAE,uBADQ;MAElBV,OAAO,EAAEW,iBAAiB,CAACJ,aAAD,EAAeT,UAAf,EAA0B,CAA1B;IAFR,CAApB;EAID;;EAGDF,gBAAgB;EAChB,OAAOI,OAAP;AAED,CAnBM;AAqBP,OAAO,MAAMY,gBAAgB,GAAG,CAACR,UAAD,EAAmBK,SAAnB,KAAwC;EAEtE,OAAOrB,OAAO,CAACiB,cAAD,CAAd;AACD,CAHM;KAAMO,gB"},"metadata":{},"sourceType":"module"}