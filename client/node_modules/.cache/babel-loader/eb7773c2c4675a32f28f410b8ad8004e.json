{"ast":null,"code":"import { useEffect } from 'react';\nimport { getHotkeyMatcher } from './parse-hotkey.js';\nexport { getHotkeyHandler } from './parse-hotkey.js';\n\nfunction shouldFireEvent(event) {\n  if (event.target instanceof HTMLElement) {\n    return ![\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(event.target.tagName);\n  }\n\n  return true;\n}\n\nfunction useHotkeys(hotkeys) {\n  useEffect(() => {\n    const keydownListener = event => {\n      hotkeys.forEach(_ref => {\n        let [hotkey, handler] = _ref;\n\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener(\"keydown\", keydownListener);\n    return () => document.documentElement.removeEventListener(\"keydown\", keydownListener);\n  }, [hotkeys]);\n}\n\nexport { useHotkeys };","map":{"version":3,"mappings":";;;;AAGA,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,IAAIA,KAAK,CAACC,MAAN,YAAwBC,WAA5B,EAAyC;IACvC,OAAO,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgCC,QAAhC,CAAyCH,KAAK,CAACC,MAAN,CAAaG,OAAtD,CAAR;EACD;;EACD,OAAO,IAAP;AACD;;AACM,SAASC,UAAT,CAAoBC,OAApB,EAA6B;EAClCC,SAAS,CAAC,MAAM;IACd,MAAMC,eAAe,GAAIR,KAAD,IAAW;MACjCM,OAAO,CAACG,OAAR,CAAgB,QAAuB;QAAA,IAAtB,CAACC,MAAD,EAASC,OAAT,CAAsB;;QACrC,IAAIC,gBAAgB,CAACF,MAAD,CAAhB,CAAyBV,KAAzB,KAAmCD,eAAe,CAACC,KAAD,CAAtD,EAA+D;UAC7DA,KAAK,CAACa,cAAN;UACAF,OAAO,CAACX,KAAD,CAAP;QACD;MACF,CALD;IAMD,CAPD;;IAQAc,QAAQ,CAACC,eAAT,CAAyBC,gBAAzB,CAA0C,SAA1C,EAAqDR,eAArD;IACA,OAAO,MAAMM,QAAQ,CAACC,eAAT,CAAyBE,mBAAzB,CAA6C,SAA7C,EAAwDT,eAAxD,CAAb;EACD,CAXQ,EAWN,CAACF,OAAD,CAXM,CAAT;AAYF","names":["shouldFireEvent","event","target","HTMLElement","includes","tagName","useHotkeys","hotkeys","useEffect","keydownListener","forEach","hotkey","handler","getHotkeyMatcher","preventDefault","document","documentElement","addEventListener","removeEventListener"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/hooks/src/use-hotkeys/use-hotkeys.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { getHotkeyMatcher, getHotkeyHandler } from './parse-hotkey';\n\nexport { getHotkeyHandler };\n\nexport type HotkeyItem = [string, (event: KeyboardEvent) => void];\n\nfunction shouldFireEvent(event: KeyboardEvent) {\n  if (event.target instanceof HTMLElement) {\n    return !['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName);\n  }\n  return true;\n}\n\nexport function useHotkeys(hotkeys: HotkeyItem[]) {\n  useEffect(() => {\n    const keydownListener = (event: KeyboardEvent) => {\n      hotkeys.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(event) && shouldFireEvent(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener('keydown', keydownListener);\n    return () => document.documentElement.removeEventListener('keydown', keydownListener);\n  }, [hotkeys]);\n}\n"]},"metadata":{},"sourceType":"module"}