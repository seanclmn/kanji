{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\n\nvar PanelView =\n/** @class */\nfunction (_super) {\n  __extends(PanelView, _super);\n\n  function PanelView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleClose = function () {\n      return _this.props.onClose(_this.props.panel);\n    };\n\n    return _this;\n  }\n\n  PanelView.prototype.render = function () {\n    var _a = this.props,\n        panel = _a.panel,\n        onOpen = _a.onOpen; // two <span> tags in header ensure title is centered as long as\n    // possible, due to `flex: 1` magic.\n\n    return React.createElement(\"div\", {\n      className: Classes.PANEL_STACK_VIEW\n    }, this.maybeRenderHeader(), React.createElement(panel.component, __assign({\n      openPanel: onOpen,\n      closePanel: this.handleClose\n    }, panel.props)));\n  };\n\n  PanelView.prototype.maybeRenderHeader = function () {\n    if (!this.props.showHeader) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: Classes.PANEL_STACK_HEADER\n    }, React.createElement(\"span\", null, this.maybeRenderBack()), React.createElement(Text, {\n      className: Classes.HEADING,\n      ellipsize: true,\n      title: this.props.panel.htmlTitle\n    }, this.props.panel.title), React.createElement(\"span\", null));\n  };\n\n  PanelView.prototype.maybeRenderBack = function () {\n    if (this.props.previousPanel === undefined) {\n      return null;\n    }\n\n    return React.createElement(Button, {\n      \"aria-label\": \"Back\",\n      className: Classes.PANEL_STACK_HEADER_BACK,\n      icon: \"chevron-left\",\n      minimal: true,\n      onClick: this.handleClose,\n      small: true,\n      text: this.props.previousPanel.title,\n      title: this.props.previousPanel.htmlTitle\n    });\n  };\n\n  return PanelView;\n}(AbstractPureComponent2);\n\nexport { PanelView };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,OAAjC,QAAgD,cAAhD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;;AA4BA;AAAA;AAAA;EAA+BC;;EAA/B;IAAA;;IA8CYC,oBAAc;MAAM,YAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBF,KAAI,CAACC,KAAL,CAAWE,KAA9B;IAAoC,CAAxD;;;EACX;;EA9CUC,6BAAP;IACU,SAAoB,KAAKH,KAAzB;IAAA,IAAEE,KAAK,WAAP;IAAA,IAASE,MAAM,YAAf,CADV,CAEI;IACA;;IACA,OACIX;MAAKY,SAAS,EAAEV,OAAO,CAACW;IAAxB,GACK,KAAKC,iBAAL,EADL,EAEId,oBAACS,KAAK,CAACM,SAAP,EAAgBC;MAACC,SAAS,EAAEN,MAAZ;MAAoBO,UAAU,EAAE,KAAKC;IAArC,GAAsDV,KAAK,CAACF,KAA5D,CAAhB,CAFJ,CADJ;EAMH,CAVM;;EAYCG,wCAAR;IACI,IAAI,CAAC,KAAKH,KAAL,CAAWa,UAAhB,EAA4B;MACxB,OAAO,IAAP;IACH;;IACD,OACIpB;MAAKY,SAAS,EAAEV,OAAO,CAACmB;IAAxB,GACIrB,kCAAO,KAAKsB,eAAL,EAAP,CADJ,EAEItB,oBAACI,IAAD,EAAK;MAACQ,SAAS,EAAEV,OAAO,CAACqB,OAApB;MAA6BC,SAAS,EAAE,IAAxC;MAA8CC,KAAK,EAAE,KAAKlB,KAAL,CAAWE,KAAX,CAAiBiB;IAAtE,CAAL,EACK,KAAKnB,KAAL,CAAWE,KAAX,CAAiBgB,KADtB,CAFJ,EAKIzB,iCALJ,CADJ;EASH,CAbO;;EAeAU,sCAAR;IACI,IAAI,KAAKH,KAAL,CAAWoB,aAAX,KAA6BC,SAAjC,EAA4C;MACxC,OAAO,IAAP;IACH;;IACD,OACI5B,oBAACG,MAAD,EAAO;MAAA,cACQ,MADR;MAEHS,SAAS,EAAEV,OAAO,CAAC2B,uBAFhB;MAGHC,IAAI,EAAC,cAHF;MAIHC,OAAO,EAAE,IAJN;MAKHC,OAAO,EAAE,KAAKb,WALX;MAMHc,KAAK,EAAE,IANJ;MAOHC,IAAI,EAAE,KAAK3B,KAAL,CAAWoB,aAAX,CAAyBF,KAP5B;MAQHA,KAAK,EAAE,KAAKlB,KAAL,CAAWoB,aAAX,CAAyBD;IAR7B,CAAP,CADJ;EAYH,CAhBO;;EAmBZ;AAAC,CA/CD,CAA+BzB,sBAA/B","names":["React","AbstractPureComponent2","Classes","Button","Text","__extends","_this","props","onClose","panel","PanelView","onOpen","className","PANEL_STACK_VIEW","maybeRenderHeader","component","__assign","openPanel","closePanel","handleClose","showHeader","PANEL_STACK_HEADER","maybeRenderBack","HEADING","ellipsize","title","htmlTitle","previousPanel","undefined","PANEL_STACK_HEADER_BACK","icon","minimal","onClick","small","text"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@blueprintjs/core/src/components/panel-stack/panelView.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\nimport { IPanel } from \"./panelProps\";\n\n/* eslint-disable deprecation/deprecation */\n\nexport interface IPanelViewProps {\n    /**\n     * Callback invoked when the user presses the back button or a panel invokes\n     * the `closePanel()` injected prop method.\n     */\n    onClose: (removedPanel: IPanel<any>) => void;\n\n    /**\n     * Callback invoked when a panel invokes the `openPanel(panel)` injected\n     * prop method.\n     */\n    onOpen: (addedPanel: IPanel<any>) => void;\n\n    /** The panel to be displayed. */\n    panel: IPanel;\n\n    /** The previous panel in the stack, for rendering the \"back\" button. */\n    previousPanel?: IPanel;\n\n    /** Whether to show the header with the \"back\" button. */\n    showHeader: boolean;\n}\n\nexport class PanelView extends AbstractPureComponent2<IPanelViewProps> {\n    public render() {\n        const { panel, onOpen } = this.props;\n        // two <span> tags in header ensure title is centered as long as\n        // possible, due to `flex: 1` magic.\n        return (\n            <div className={Classes.PANEL_STACK_VIEW}>\n                {this.maybeRenderHeader()}\n                <panel.component openPanel={onOpen} closePanel={this.handleClose} {...panel.props} />\n            </div>\n        );\n    }\n\n    private maybeRenderHeader() {\n        if (!this.props.showHeader) {\n            return null;\n        }\n        return (\n            <div className={Classes.PANEL_STACK_HEADER}>\n                <span>{this.maybeRenderBack()}</span>\n                <Text className={Classes.HEADING} ellipsize={true} title={this.props.panel.htmlTitle}>\n                    {this.props.panel.title}\n                </Text>\n                <span />\n            </div>\n        );\n    }\n\n    private maybeRenderBack() {\n        if (this.props.previousPanel === undefined) {\n            return null;\n        }\n        return (\n            <Button\n                aria-label=\"Back\"\n                className={Classes.PANEL_STACK_HEADER_BACK}\n                icon=\"chevron-left\"\n                minimal={true}\n                onClick={this.handleClose}\n                small={true}\n                text={this.props.previousPanel.title}\n                title={this.props.previousPanel.htmlTitle}\n            />\n        );\n    }\n\n    private handleClose = () => this.props.onClose(this.props.panel);\n}\n"]},"metadata":{},"sourceType":"module"}