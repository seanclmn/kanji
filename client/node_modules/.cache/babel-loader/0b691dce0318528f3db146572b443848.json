{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon } from \"../icon/icon\";\n\nvar Toast =\n/** @class */\nfunction (_super) {\n  __extends(Toast, _super);\n\n  function Toast() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleActionClick = function (e) {\n      var _a, _b;\n\n      (_b = (_a = _this.props.action) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n\n      _this.triggerDismiss(false);\n    };\n\n    _this.handleCloseClick = function () {\n      return _this.triggerDismiss(false);\n    };\n\n    _this.startTimeout = function () {\n      _this.clearTimeouts();\n\n      if (_this.props.timeout > 0) {\n        _this.setTimeout(function () {\n          return _this.triggerDismiss(true);\n        }, _this.props.timeout);\n      }\n    };\n\n    return _this;\n  }\n\n  Toast.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        icon = _a.icon,\n        intent = _a.intent,\n        message = _a.message;\n    return React.createElement(\"div\", {\n      className: classNames(Classes.TOAST, Classes.intentClass(intent), className),\n      onBlur: this.startTimeout,\n      onFocus: this.clearTimeouts,\n      onMouseEnter: this.clearTimeouts,\n      onMouseLeave: this.startTimeout,\n      tabIndex: 0\n    }, React.createElement(Icon, {\n      icon: icon\n    }), React.createElement(\"span\", {\n      className: Classes.TOAST_MESSAGE,\n      role: \"alert\"\n    }, message), React.createElement(ButtonGroup, {\n      minimal: true\n    }, this.maybeRenderActionButton(), React.createElement(Button, {\n      \"aria-label\": \"Close\",\n      icon: \"cross\",\n      onClick: this.handleCloseClick\n    })));\n  };\n\n  Toast.prototype.componentDidMount = function () {\n    this.startTimeout();\n  };\n\n  Toast.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.timeout !== this.props.timeout) {\n      if (this.props.timeout > 0) {\n        this.startTimeout();\n      } else {\n        this.clearTimeouts();\n      }\n    }\n  };\n\n  Toast.prototype.componentWillUnmount = function () {\n    this.clearTimeouts();\n  };\n\n  Toast.prototype.maybeRenderActionButton = function () {\n    var action = this.props.action;\n\n    if (action == null) {\n      return undefined;\n    } else {\n      return React.createElement(AnchorButton, __assign({}, action, {\n        intent: undefined,\n        onClick: this.handleActionClick\n      }));\n    }\n  };\n\n  Toast.prototype.triggerDismiss = function (didTimeoutExpire) {\n    var _a, _b;\n\n    this.clearTimeouts();\n    (_b = (_a = this.props).onDismiss) === null || _b === void 0 ? void 0 : _b.call(_a, didTimeoutExpire);\n  };\n\n  Toast.defaultProps = {\n    className: \"\",\n    message: \"\",\n    timeout: 5000\n  };\n  Toast.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Toast\");\n  return Toast;\n}(AbstractPureComponent2);\n\nexport { Toast };","map":{"version":3,"mappings":"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","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","ButtonGroup","AnchorButton","Button","Icon","__extends","_this","e","props","action","_a","onClick","_b","triggerDismiss","clearTimeouts","timeout","setTimeout","Toast","className","icon","intent","message","TOAST","intentClass","onBlur","startTimeout","onFocus","onMouseEnter","onMouseLeave","tabIndex","TOAST_MESSAGE","role","minimal","maybeRenderActionButton","handleCloseClick","prevProps","undefined","__assign","handleActionClick","didTimeoutExpire","onDismiss"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@blueprintjs/core/src/components/toast/toast.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { ActionProps, DISPLAYNAME_PREFIX, IntentProps, LinkProps, MaybeElement, Props } from \"../../common/props\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon, IconName } from \"../icon/icon\";\n\nexport type ToastProps = IToastProps;\nexport interface IToastProps extends Props, IntentProps {\n    /**\n     * Action rendered as a minimal `AnchorButton`. The toast is dismissed automatically when the\n     * user clicks the action button. Note that the `intent` prop is ignored (the action button\n     * cannot have its own intent color that might conflict with the toast's intent). Omit this\n     * prop to omit the action button.\n     */\n    action?: ActionProps & LinkProps;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render before the message. */\n    icon?: IconName | MaybeElement;\n\n    /** Message to display in the body of the toast. */\n    message: React.ReactNode;\n\n    /**\n     * Callback invoked when the toast is dismissed, either by the user or by the timeout.\n     * The value of the argument indicates whether the toast was closed because the timeout expired.\n     */\n    onDismiss?: (didTimeoutExpire: boolean) => void;\n\n    /**\n     * Milliseconds to wait before automatically dismissing toast.\n     * Providing a value less than or equal to 0 will disable the timeout (this is discouraged).\n     *\n     * @default 5000\n     */\n    timeout?: number;\n}\n\nexport class Toast extends AbstractPureComponent2<IToastProps> {\n    public static defaultProps: IToastProps = {\n        className: \"\",\n        message: \"\",\n        timeout: 5000,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Toast`;\n\n    public render(): JSX.Element {\n        const { className, icon, intent, message } = this.props;\n        return (\n            <div\n                className={classNames(Classes.TOAST, Classes.intentClass(intent), className)}\n                onBlur={this.startTimeout}\n                onFocus={this.clearTimeouts}\n                onMouseEnter={this.clearTimeouts}\n                onMouseLeave={this.startTimeout}\n                tabIndex={0}\n            >\n                <Icon icon={icon} />\n                <span className={Classes.TOAST_MESSAGE} role=\"alert\">\n                    {message}\n                </span>\n                <ButtonGroup minimal={true}>\n                    {this.maybeRenderActionButton()}\n                    <Button aria-label=\"Close\" icon=\"cross\" onClick={this.handleCloseClick} />\n                </ButtonGroup>\n            </div>\n        );\n    }\n\n    public componentDidMount() {\n        this.startTimeout();\n    }\n\n    public componentDidUpdate(prevProps: IToastProps) {\n        if (prevProps.timeout !== this.props.timeout) {\n            if (this.props.timeout! > 0) {\n                this.startTimeout();\n            } else {\n                this.clearTimeouts();\n            }\n        }\n    }\n\n    public componentWillUnmount() {\n        this.clearTimeouts();\n    }\n\n    private maybeRenderActionButton() {\n        const { action } = this.props;\n        if (action == null) {\n            return undefined;\n        } else {\n            return <AnchorButton {...action} intent={undefined} onClick={this.handleActionClick} />;\n        }\n    }\n\n    private handleActionClick = (e: React.MouseEvent<HTMLElement>) => {\n        this.props.action?.onClick?.(e);\n        this.triggerDismiss(false);\n    };\n\n    private handleCloseClick = () => this.triggerDismiss(false);\n\n    private triggerDismiss(didTimeoutExpire: boolean) {\n        this.clearTimeouts();\n        this.props.onDismiss?.(didTimeoutExpire);\n    }\n\n    private startTimeout = () => {\n        this.clearTimeouts();\n        if (this.props.timeout! > 0) {\n            this.setTimeout(() => this.triggerDismiss(true), this.props.timeout);\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}