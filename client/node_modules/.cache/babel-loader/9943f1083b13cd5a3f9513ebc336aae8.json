{"ast":null,"code":"import createCache from '@emotion/cache';\nimport { useMantineEmotionOptions } from '../theme/MantineProvider.js';\nconst defaultCacheOptions = {\n  key: \"mantine\",\n  prepend: true\n};\n\nconst {\n  getCache\n} = (() => {\n  let cache;\n  let _key = defaultCacheOptions.key;\n\n  function _getCache(options) {\n    if (cache === void 0 || _key !== (options == null ? void 0 : options.key)) {\n      _key = (options == null ? void 0 : options.key) || \"mantine\";\n      cache = createCache((options == null ? void 0 : options.key) ? options : defaultCacheOptions);\n    }\n\n    return cache;\n  }\n\n  return {\n    getCache: _getCache\n  };\n})();\n\nfunction useEmotionCache() {\n  const options = useMantineEmotionOptions();\n  return getCache(options);\n}\n\nexport { getCache, useEmotionCache };","map":{"version":3,"mappings":";;AAEA,MAAMA,mBAAmB,GAAG;EAC1BC,GAAG,EAAE,SADqB;EAE1BC,OAAO,EAAE;AAFiB,CAA5B;;AAIY,MAAC;EAAEC;AAAF,IAAe,CAAC,MAAM;EACjC,IAAIC,KAAJ;EACA,IAAIC,IAAI,GAAGL,mBAAmB,CAACC,GAA/B;;EACA,SAASK,SAAT,CAAmBC,OAAnB,EAA4B;IAC1B,IAAIH,KAAK,KAAK,KAAK,CAAf,IAAoBC,IAAI,MAAME,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACN,GAAzC,CAA5B,EAA2E;MACzEI,IAAI,GAAG,CAACE,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACN,GAApC,KAA4C,SAAnD;MACAG,KAAK,GAAGI,WAAW,CAAC,CAACD,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACN,GAApC,IAA2CM,OAA3C,GAAqDP,mBAAtD,CAAnB;IACD;;IACD,OAAOI,KAAP;EACD;;EACD,OAAO;IAAED,QAAQ,EAAEG;EAAZ,CAAP;AACD,CAX2B,GAAhB;;AAYL,SAASG,eAAT,GAA2B;EAChC,MAAMF,OAAO,GAAGG,wBAAwB,EAAxC;EACA,OAAOP,QAAQ,CAACI,OAAD,CAAf;AACF","names":["defaultCacheOptions","key","prepend","getCache","cache","_key","_getCache","options","createCache","useEmotionCache","useMantineEmotionOptions"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/styles/src/tss/use-emotion-cache.ts"],"sourcesContent":["import createCache, { EmotionCache, Options } from '@emotion/cache';\nimport { useMantineEmotionOptions } from '../theme/MantineProvider';\n\nconst defaultCacheOptions: Options = {\n  key: 'mantine',\n  prepend: true,\n};\n\nexport const { getCache } = (() => {\n  let cache: EmotionCache;\n  let _key = defaultCacheOptions.key;\n\n  function _getCache(options?: Options) {\n    if (cache === undefined || _key !== options?.key) {\n      _key = options?.key || 'mantine';\n      cache = createCache(options?.key ? options : defaultCacheOptions);\n    }\n\n    return cache;\n  }\n\n  return { getCache: _getCache };\n})();\n\nexport function useEmotionCache() {\n  const options = useMantineEmotionOptions();\n  return getCache(options);\n}\n"]},"metadata":{},"sourceType":"module"}