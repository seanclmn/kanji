{"ast":null,"code":"var _jsxFileName = \"/Users/seancoleman/Projects/kanji/src/components/QuizContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QuizGame from './QuizGame';\nimport QuizStart from './QuizStart';\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizContainer() {\n  _s();\n\n  let {\n    levelquiz\n  } = useParams();\n  const [stage, setStage] = useState(\"start\");\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const questions = [{\n    question: \"here's a question son\",\n    answers: [\"test\", \"womp\", \"wadda ya want\", \"nah\"]\n  }, {\n    question: \"here's another one\",\n    answers: [\"one\", \"two\", \"three\", \"four\"]\n  }, {\n    question: \"here's da last one\",\n    answers: [\"heh\", \"hehe\", \"hehehe\", \"hehehehe\"]\n  }];\n\n  const startQuiz = () => {\n    setStage(\"game\");\n  };\n\n  const endQuiz = () => {\n    setStage(\"end\");\n  };\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: levelquiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), stage == \"start\" && /*#__PURE__*/_jsxDEV(QuizStart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this), stage == \"game\" && /*#__PURE__*/_jsxDEV(QuizGame, {\n      question: questions[questionIndex].question,\n      answers: questions[questionIndex].answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this), stage == \"end\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }, this), questionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => nextQuestion(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => endQuiz(),\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 97\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizContainer, \"uhp97l/seo5Eg+rr0Dgn7ZTxz/Q=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizContainer;\nexport default QuizContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","useState","useParams","QuizGame","QuizStart","Button","QuizContainer","levelquiz","stage","setStage","questionIndex","setQuestionIndex","questions","question","answers","startQuiz","endQuiz","nextQuestion","length"],"sources":["/Users/seancoleman/Projects/kanji/src/components/QuizContainer.tsx"],"sourcesContent":["import React,{useState} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport QuizGame from './QuizGame'\nimport QuizStart from './QuizStart'\nimport {Button} from '@mantine/core'\n\n\nfunction QuizContainer() {\n  let {levelquiz} = useParams()\n  const [stage,setStage]=useState(\"start\")\n  const [questionIndex,setQuestionIndex]=useState(0)\n\n\n  const questions = [\n    { \n      question: \"here's a question son\",\n      answers: [\"test\",\"womp\",\"wadda ya want\", \"nah\"]\n    },\n    {\n      question: \"here's another one\",\n      answers: [\"one\",\"two\",\"three\",\"four\"]\n    },\n    {\n      question: \"here's da last one\",\n      answers: [\"heh\",\"hehe\",\"hehehe\",\"hehehehe\"]\n    }\n  ]\n\n  const startQuiz = () => {\n    setStage(\"game\")\n  }\n\n  const endQuiz = () => {\n    setStage(\"end\")\n  }\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex+1)\n  }\n    \n  \n\n  return (\n    <>\n      <div>{levelquiz}</div>\n      {stage==\"start\" && <QuizStart/>}\n      \n      {stage==\"game\" && <QuizGame question={questions[questionIndex].question} answers={questions[questionIndex].answers}/>}\n\n      {stage==\"end\" && <p>end</p>}\n      {questionIndex < questions.length-1 ? <Button onClick={()=>nextQuestion()}>Next</Button>: <Button onClick={()=>endQuiz()}>Finish</Button>}\n      \n    </>\n  )\n}\n\nexport default QuizContainer\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,eAArB;;;;AAGA,SAASC,aAAT,GAAyB;EAAA;;EACvB,IAAI;IAACC;EAAD,IAAcL,SAAS,EAA3B;EACA,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAiBR,QAAQ,CAAC,OAAD,CAA/B;EACA,MAAM,CAACS,aAAD,EAAeC,gBAAf,IAAiCV,QAAQ,CAAC,CAAD,CAA/C;EAGA,MAAMW,SAAS,GAAG,CAChB;IACEC,QAAQ,EAAE,uBADZ;IAEEC,OAAO,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,eAAf,EAAgC,KAAhC;EAFX,CADgB,EAKhB;IACED,QAAQ,EAAE,oBADZ;IAEEC,OAAO,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,OAAb,EAAqB,MAArB;EAFX,CALgB,EAShB;IACED,QAAQ,EAAE,oBADZ;IAEEC,OAAO,EAAE,CAAC,KAAD,EAAO,MAAP,EAAc,QAAd,EAAuB,UAAvB;EAFX,CATgB,CAAlB;;EAeA,MAAMC,SAAS,GAAG,MAAM;IACtBN,QAAQ,CAAC,MAAD,CAAR;EACD,CAFD;;EAIA,MAAMO,OAAO,GAAG,MAAM;IACpBP,QAAQ,CAAC,KAAD,CAAR;EACD,CAFD;;EAIA,MAAMQ,YAAY,GAAG,MAAM;IACzBN,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;EACD,CAFD;;EAMA,oBACE;IAAA,wBACE;MAAA,UAAMH;IAAN;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,IAAE,OAAP,iBAAkB,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFrB,EAIGA,KAAK,IAAE,MAAP,iBAAiB,QAAC,QAAD;MAAU,QAAQ,EAAEI,SAAS,CAACF,aAAD,CAAT,CAAyBG,QAA7C;MAAuD,OAAO,EAAED,SAAS,CAACF,aAAD,CAAT,CAAyBI;IAAzF;MAAA;MAAA;MAAA;IAAA,QAJpB,EAMGN,KAAK,IAAE,KAAP,iBAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANnB,EAOGE,aAAa,GAAGE,SAAS,CAACM,MAAV,GAAiB,CAAjC,gBAAqC,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAID,YAAY,EAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAArC,gBAAyF,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAID,OAAO,EAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAP5F;EAAA,gBADF;AAYD;;GA/CQV,a;UACWJ,S;;;KADXI,a;AAiDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}