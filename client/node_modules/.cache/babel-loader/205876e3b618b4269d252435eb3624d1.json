{"ast":null,"code":"var _jsxFileName = \"/Users/seancoleman/Projects/kanji/src/components/QuizGame.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizGame(_ref) {\n  _s();\n\n  let {\n    questions,\n    endQuiz\n  } = _ref;\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [answered, setAnswered] = useState(true);\n  const [colors, setColors] = [\"blue\", \"blue\", \"blue\", \"blue\"];\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex + 1);\n    setAnswered(true);\n  };\n\n  const answerQuestion = () => {\n    console.log(\"clicked\");\n    setAnswered(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto w-[70%]\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: questions[questionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: questions[questionIndex].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => answerQuestion(),\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center my-[50px]\",\n      children: questionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: answered,\n        onClick: () => nextQuestion(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: answered,\n        onClick: () => endQuiz(),\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 119\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizGame, \"ovS5ehS20R0N9Kheh1FVOImsAzE=\");\n\n_c = QuizGame;\nexport default QuizGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","Button","QuizGame","questions","endQuiz","questionIndex","setQuestionIndex","answered","setAnswered","colors","setColors","nextQuestion","answerQuestion","console","log","question","answers","map","answer","index","length"],"sources":["/Users/seancoleman/Projects/kanji/src/components/QuizGame.tsx"],"sourcesContent":["import React,{useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport QuizAnswerButton from './QuizAnswerButton'\n\nimport {Button} from '@mantine/core'\n\ninterface QuizGameProps {\n  questions: Question[]\n  endQuiz: Function\n}\n\ninterface Question{\n  question: string\n  answers: string[]\n}\n\nfunction QuizGame({questions, endQuiz}:QuizGameProps) {\n  const [questionIndex,setQuestionIndex]=useState(0)\n  const [answered,setAnswered]=useState(true)\n  const [colors,setColors]=[\"blue\",\"blue\",\"blue\",\"blue\"]\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex+1)\n    setAnswered(true)\n  }\n\n  const answerQuestion = () => {\n    console.log(\"clicked\")\n    setAnswered(false)\n  }\n\n  return (\n    <div className=\"mx-auto w-[70%]\">\n      <p>{questions[questionIndex].question}</p>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {questions[questionIndex].answers.map((answer,index)=> \n          <Button key={index} onClick={()=>(\n            answerQuestion())\n            \n            }\n            >\n              {answer}\n            </Button>)}\n      </div>\n\n      <div className='flex flex-row justify-center my-[50px]'>\n        {questionIndex < questions.length-1 ? <Button disabled={answered} onClick={()=>nextQuestion()}>Next</Button>: <Button disabled={answered} onClick={()=>endQuiz()}>Finish</Button>}\n\n      </div>  \n    </div>\n )\n}\n\nexport default QuizGame\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAIA,SAAQC,MAAR,QAAqB,eAArB;;;AAYA,SAASC,QAAT,OAAsD;EAAA;;EAAA,IAApC;IAACC,SAAD;IAAYC;EAAZ,CAAoC;EACpD,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAiCN,QAAQ,CAAC,CAAD,CAA/C;EACA,MAAM,CAACO,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,IAAD,CAArC;EACA,MAAM,CAACS,MAAD,EAAQC,SAAR,IAAmB,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,CAAzB;;EAEA,MAAMC,YAAY,GAAG,MAAM;IACzBL,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;IACAG,WAAW,CAAC,IAAD,CAAX;EACD,CAHD;;EAKA,MAAMI,cAAc,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAN,WAAW,CAAC,KAAD,CAAX;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE;MAAA,UAAIL,SAAS,CAACE,aAAD,CAAT,CAAyBU;IAA7B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,wBAAf;MAAA,UACGZ,SAAS,CAACE,aAAD,CAAT,CAAyBW,OAAzB,CAAiCC,GAAjC,CAAqC,CAACC,MAAD,EAAQC,KAAR,kBACpC,QAAC,MAAD;QAAoB,OAAO,EAAE,MAC3BP,cAAc,EADhB;QAAA,UAKKM;MALL,GAAaC,KAAb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAaE;MAAK,SAAS,EAAC,wCAAf;MAAA,UACGd,aAAa,GAAGF,SAAS,CAACiB,MAAV,GAAiB,CAAjC,gBAAqC,QAAC,MAAD;QAAQ,QAAQ,EAAEb,QAAlB;QAA4B,OAAO,EAAE,MAAII,YAAY,EAArD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAArC,gBAA6G,QAAC,MAAD;QAAQ,QAAQ,EAAEJ,QAAlB;QAA4B,OAAO,EAAE,MAAIH,OAAO,EAAhD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADhH;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAnCQF,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}