{"ast":null,"code":"var _jsxFileName = \"/Users/seancoleman/Projects/kanji/src/components/QuizGame.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizGame(_ref) {\n  _s();\n\n  let {\n    questions,\n    endQuiz\n  } = _ref;\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [answered, setAnswered] = useState(true);\n  const [colors, setColors] = useState([\"blue\", \"blue\", \"blue\", \"blue\"]);\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex + 1);\n    setAnswered(true);\n    setColors([\"blue\", \"blue\", \"blue\", \"blue\"]);\n  };\n\n  const answerQuestion = index => {\n    console.log(\"clicked\");\n    setAnswered(false);\n    let newColors = colors;\n    if (index == questions.length - 1) newColors[index] = \"green\";else newColors[index] = \"red\";\n    setColors(newColors);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto w-[70%]\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: questions[questionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: questions[questionIndex].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Button, {\n        color: colors[index],\n        onClick: () => answerQuestion(index),\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center my-[50px]\",\n      children: questionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: answered,\n        onClick: () => nextQuestion(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        disabled: answered,\n        onClick: () => endQuiz(),\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 119\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizGame, \"mV3l8W7nusTM04JOZXxlRC36Wcc=\");\n\n_c = QuizGame;\nexport default QuizGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","Button","QuizGame","questions","endQuiz","questionIndex","setQuestionIndex","answered","setAnswered","colors","setColors","nextQuestion","answerQuestion","index","console","log","newColors","length","question","answers","map","answer"],"sources":["/Users/seancoleman/Projects/kanji/src/components/QuizGame.tsx"],"sourcesContent":["import React,{useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport QuizAnswerButton from './QuizAnswerButton'\n\nimport {Button} from '@mantine/core'\n\ninterface QuizGameProps {\n  questions: Question[]\n  endQuiz: Function\n}\n\ninterface Question{\n  question: string\n  answers: string[]\n}\n\nfunction QuizGame({questions, endQuiz}:QuizGameProps) {\n  const [questionIndex,setQuestionIndex]=useState(0)\n  const [answered,setAnswered]=useState(true)\n  const [colors,setColors]=useState([\"blue\",\"blue\",\"blue\",\"blue\"])\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex+1)\n    setAnswered(true)\n    setColors([\"blue\",\"blue\",\"blue\",\"blue\"])\n  }\n\n  const answerQuestion = (index:number) => {\n    console.log(\"clicked\")\n    setAnswered(false)\n    let newColors = colors\n    if(index==questions.length-1)\n      newColors[index] = \"green\"\n    else\n      newColors[index] = \"red\"\n\n    setColors(newColors)\n  }\n\n  return (\n    <div className=\"mx-auto w-[70%]\">\n      <p>{questions[questionIndex].question}</p>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {questions[questionIndex].answers.map((answer,index)=> \n          <Button \n            key={index} \n            color={colors[index]}\n            onClick={()=>(answerQuestion(index))}\n            >\n              {answer}\n            </Button>)}\n      </div>\n\n      <div className='flex flex-row justify-center my-[50px]'>\n        {questionIndex < questions.length-1 ? <Button disabled={answered} onClick={()=>nextQuestion()}>Next</Button>: <Button disabled={answered} onClick={()=>endQuiz()}>Finish</Button>}\n\n      </div>  \n    </div>\n )\n}\n\nexport default QuizGame\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAIA,SAAQC,MAAR,QAAqB,eAArB;;;AAYA,SAASC,QAAT,OAAsD;EAAA;;EAAA,IAApC;IAACC,SAAD;IAAYC;EAAZ,CAAoC;EACpD,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAiCN,QAAQ,CAAC,CAAD,CAA/C;EACA,MAAM,CAACO,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,IAAD,CAArC;EACA,MAAM,CAACS,MAAD,EAAQC,SAAR,IAAmBV,QAAQ,CAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,CAAD,CAAjC;;EAEA,MAAMW,YAAY,GAAG,MAAM;IACzBL,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;IACAG,WAAW,CAAC,IAAD,CAAX;IACAE,SAAS,CAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,CAAD,CAAT;EACD,CAJD;;EAMA,MAAME,cAAc,GAAIC,KAAD,IAAkB;IACvCC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAP,WAAW,CAAC,KAAD,CAAX;IACA,IAAIQ,SAAS,GAAGP,MAAhB;IACA,IAAGI,KAAK,IAAEV,SAAS,CAACc,MAAV,GAAiB,CAA3B,EACED,SAAS,CAACH,KAAD,CAAT,GAAmB,OAAnB,CADF,KAGEG,SAAS,CAACH,KAAD,CAAT,GAAmB,KAAnB;IAEFH,SAAS,CAACM,SAAD,CAAT;EACD,CAVD;;EAYA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE;MAAA,UAAIb,SAAS,CAACE,aAAD,CAAT,CAAyBa;IAA7B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,wBAAf;MAAA,UACGf,SAAS,CAACE,aAAD,CAAT,CAAyBc,OAAzB,CAAiCC,GAAjC,CAAqC,CAACC,MAAD,EAAQR,KAAR,kBACpC,QAAC,MAAD;QAEE,KAAK,EAAEJ,MAAM,CAACI,KAAD,CAFf;QAGE,OAAO,EAAE,MAAKD,cAAc,CAACC,KAAD,CAH9B;QAAA,UAKKQ;MALL,GACOR,KADP;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAaE;MAAK,SAAS,EAAC,wCAAf;MAAA,UACGR,aAAa,GAAGF,SAAS,CAACc,MAAV,GAAiB,CAAjC,gBAAqC,QAAC,MAAD;QAAQ,QAAQ,EAAEV,QAAlB;QAA4B,OAAO,EAAE,MAAII,YAAY,EAArD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAArC,gBAA6G,QAAC,MAAD;QAAQ,QAAQ,EAAEJ,QAAlB;QAA4B,OAAO,EAAE,MAAIH,OAAO,EAAhD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADhH;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA3CQF,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}