{"ast":null,"code":"import React, { forwardRef, useState } from 'react';\nimport { useMove, useDidUpdate, useMergedRef, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './ColorSlider.styles.js';\nimport { Box } from '../../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst ColorSlider = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    value,\n    onChange,\n    maxValue,\n    round,\n    size = \"md\",\n    thumbColor = \"transparent\",\n    __staticSelector = \"ColorSlider\",\n    focusable = true,\n    overlays,\n    classNames,\n    styles,\n    className\n  } = _b,\n      others = __objRest(_b, [\"value\", \"onChange\", \"maxValue\", \"round\", \"size\", \"thumbColor\", \"__staticSelector\", \"focusable\", \"overlays\", \"classNames\", \"styles\", \"className\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const [position, setPosition] = useState({\n    y: 0,\n    x: value / maxValue\n  });\n\n  const getChangeValue = val => round ? Math.round(val * maxValue) : val * maxValue;\n\n  const {\n    ref: sliderRef\n  } = useMove(_ref => {\n    let {\n      x\n    } = _ref;\n    return onChange(getChangeValue(x));\n  });\n  useDidUpdate(() => {\n    setPosition({\n      y: 0,\n      x: value / maxValue\n    });\n  }, [value]);\n\n  const handleArrow = (event, pos) => {\n    event.preventDefault();\n\n    const _position = clampUseMovePosition(pos);\n\n    onChange(getChangeValue(_position.x));\n  };\n\n  const handleKeyDown = event => {\n    switch (event.nativeEvent.code) {\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n\n  const layers = overlays.map((overlay, index) => /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.sliderOverlay,\n    style: overlay,\n    key: index\n  }));\n  return /* @__PURE__ */React.createElement(Box, __spreadProps(__spreadValues({}, others), {\n    ref: useMergedRef(sliderRef, ref),\n    className: cx(classes.slider, className),\n    role: \"slider\",\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": maxValue,\n    \"aria-valuemin\": 0,\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }), layers, /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector,\n    classNames,\n    styles,\n    position,\n    style: {\n      top: 1,\n      backgroundColor: thumbColor\n    },\n    className: classes.sliderThumb,\n    size\n  }));\n});\nColorSlider.displayName = \"@mantine/core/ColorSlider\";\nexport { ColorSlider };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","ColorSlider","forwardRef","_a","ref","_b","onChange","maxValue","round","size","thumbColor","__staticSelector","focusable","overlays","classNames","styles","className","others","classes","cx","useStyles","name","position","setPosition","useState","y","x","getChangeValue","val","Math","sliderRef","useMove","useDidUpdate","handleArrow","event","pos","preventDefault","_position","clampUseMovePosition","handleKeyDown","nativeEvent","code","layers","map","overlay","index","React","createElement","sliderOverlay","style","Box","useMergedRef","slider","role","tabIndex","onKeyDown","Thumb","top","backgroundColor","sliderThumb","displayName"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/core/src/components/ColorPicker/ColorSlider/ColorSlider.tsx"],"sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport {\n  useMove,\n  clampUseMovePosition,\n  useDidUpdate,\n  UseMovePosition,\n  useMergedRef,\n} from '@mantine/hooks';\nimport { DefaultProps, MantineSize, Selectors } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport useStyles from './ColorSlider.styles';\n\nexport type ColorSliderStylesNames =\n  | Exclude<Selectors<typeof useStyles>, 'sliderThumb'>\n  | ThumbStylesNames;\n\nexport interface BaseColorSliderProps\n  extends DefaultProps<ColorSliderStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  value: number;\n  onChange(value: number): void;\n  size?: MantineSize;\n  focusable?: boolean;\n  __staticSelector?: string;\n}\n\nexport interface ColorSliderProps extends BaseColorSliderProps {\n  maxValue: number;\n  overlays: React.CSSProperties[];\n  round: boolean;\n  thumbColor?: string;\n}\n\nexport const ColorSlider = forwardRef<HTMLDivElement, ColorSliderProps>(\n  (\n    {\n      value,\n      onChange,\n      maxValue,\n      round,\n      size = 'md',\n      thumbColor = 'transparent',\n      __staticSelector = 'ColorSlider',\n      focusable = true,\n      overlays,\n      classNames,\n      styles,\n      className,\n      ...others\n    }: ColorSliderProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles({ size }, { classNames, styles, name: __staticSelector });\n    const [position, setPosition] = useState({ y: 0, x: value / maxValue });\n    const getChangeValue = (val: number) => (round ? Math.round(val * maxValue) : val * maxValue);\n    const { ref: sliderRef } = useMove(({ x }) => onChange(getChangeValue(x)));\n\n    useDidUpdate(() => {\n      setPosition({ y: 0, x: value / maxValue });\n    }, [value]);\n\n    const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n      event.preventDefault();\n      const _position = clampUseMovePosition(pos);\n      onChange(getChangeValue(_position.x));\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      switch (event.nativeEvent.code) {\n        case 'ArrowRight': {\n          handleArrow(event, { x: position.x + 0.05, y: position.y });\n          break;\n        }\n\n        case 'ArrowLeft': {\n          handleArrow(event, { x: position.x - 0.05, y: position.y });\n          break;\n        }\n      }\n    };\n\n    const layers = overlays.map((overlay, index) => (\n      <div className={classes.sliderOverlay} style={overlay} key={index} />\n    ));\n\n    return (\n      <Box\n        {...others}\n        ref={useMergedRef(sliderRef, ref)}\n        className={cx(classes.slider, className)}\n        role=\"slider\"\n        aria-valuenow={value}\n        aria-valuemax={maxValue}\n        aria-valuemin={0}\n        tabIndex={focusable ? 0 : -1}\n        onKeyDown={handleKeyDown}\n      >\n        {layers}\n\n        <Thumb\n          __staticSelector={__staticSelector}\n          classNames={classNames}\n          styles={styles}\n          position={position}\n          style={{ top: 1, backgroundColor: thumbColor }}\n          className={classes.sliderThumb}\n          size={size}\n        />\n      </Box>\n    );\n  }\n);\n\nColorSlider.displayName = '@mantine/core/ColorSlider';\n"]},"metadata":{},"sourceType":"module"}