{"ast":null,"code":"var _jsxFileName = \"/Users/seancoleman/Projects/kanji/src/components/QuizContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QuizGame from './QuizGame';\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizContainer() {\n  _s();\n\n  let {\n    levelquiz\n  } = useParams();\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const questions = [{\n    question: \"here's a question son\",\n    answers: [\"test\", \"womp\", \"wadda ya want\", \"nah\"]\n  }, {\n    question: \"here's another one\",\n    answers: [\"one\", \"two\", \"three\", \"four\"]\n  }];\n\n  const nextQuestion = () => {\n    if (questionIndex < questions.length - 1) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: levelquiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizGame, {\n      question: questions[questionIndex].question,\n      answers: questions[questionIndex].answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => nextQuestion(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizContainer, \"MertWmR8tX4s2HFp/woI0VOqUek=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizContainer;\nexport default QuizContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","useState","useParams","QuizGame","Button","QuizContainer","levelquiz","questionIndex","setQuestionIndex","questions","question","answers","nextQuestion","length"],"sources":["/Users/seancoleman/Projects/kanji/src/components/QuizContainer.tsx"],"sourcesContent":["import React,{useState} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport QuizGame from './QuizGame'\nimport {Button} from '@mantine/core'\n\n\nfunction QuizContainer() {\n  let {levelquiz} = useParams()\n  const [questionIndex,setQuestionIndex]=useState(0)\n\n\n  const questions = [\n    { \n      question: \"here's a question son\",\n      answers: [\"test\",\"womp\",\"wadda ya want\", \"nah\"]\n    },\n    {\n      question: \"here's another one\",\n      answers: [\"one\",\"two\",\"three\",\"four\"]\n    }\n  ]\n\n  const nextQuestion = () => {\n    if(questionIndex < questions.length-1) {\n      setQuestionIndex(questionIndex+1)\n    }\n  }\n    \n  \n\n  return (\n    <>\n      <div>{levelquiz}</div>\n      <QuizGame question={questions[questionIndex].question} answers={questions[questionIndex].answers}/>\n      <Button onClick={()=>nextQuestion()}>Next</Button>\n    </>\n  )\n}\n\nexport default QuizContainer\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,MAAR,QAAqB,eAArB;;;;AAGA,SAASC,aAAT,GAAyB;EAAA;;EACvB,IAAI;IAACC;EAAD,IAAcJ,SAAS,EAA3B;EACA,MAAM,CAACK,aAAD,EAAeC,gBAAf,IAAiCP,QAAQ,CAAC,CAAD,CAA/C;EAGA,MAAMQ,SAAS,GAAG,CAChB;IACEC,QAAQ,EAAE,uBADZ;IAEEC,OAAO,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,eAAf,EAAgC,KAAhC;EAFX,CADgB,EAKhB;IACED,QAAQ,EAAE,oBADZ;IAEEC,OAAO,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,OAAb,EAAqB,MAArB;EAFX,CALgB,CAAlB;;EAWA,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAGL,aAAa,GAAGE,SAAS,CAACI,MAAV,GAAiB,CAApC,EAAuC;MACrCL,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;IACD;EACF,CAJD;;EAQA,oBACE;IAAA,wBACE;MAAA,UAAMD;IAAN;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,QAAQ,EAAEG,SAAS,CAACF,aAAD,CAAT,CAAyBG,QAA7C;MAAuD,OAAO,EAAED,SAAS,CAACF,aAAD,CAAT,CAAyBI;IAAzF;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAIC,YAAY,EAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;;GA/BQP,a;UACWH,S;;;KADXG,a;AAiCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}