{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nconst eventListerOptions = {\n  passive: true\n};\nconst browser = typeof window !== \"undefined\";\n\nfunction useViewportSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: browser ? window.innerWidth : 0,\n    height: browser ? window.innerHeight : 0\n  });\n  const setSize = useCallback(() => {\n    setWindowSize({\n      width: window.innerWidth || 0,\n      height: window.innerHeight || 0\n    });\n  }, []);\n  useWindowEvent(\"resize\", setSize, eventListerOptions);\n  useWindowEvent(\"orientationchange\", setSize, eventListerOptions);\n  return windowSize;\n}\n\nexport { useViewportSize };","map":{"version":3,"mappings":";;AAEA,MAAMA,kBAAkB,GAAG;EACzBC,OAAO,EAAE;AADgB,CAA3B;AAGA,MAAMC,OAAO,GAAG,OAAOC,MAAP,KAAkB,WAAlC;;AACO,SAASC,eAAT,GAA2B;EAChC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC;IAC3CC,KAAK,EAAEN,OAAO,GAAGC,MAAM,CAACM,UAAV,GAAuB,CADM;IAE3CC,MAAM,EAAER,OAAO,GAAGC,MAAM,CAACQ,WAAV,GAAwB;EAFI,CAAD,CAA5C;EAIA,MAAMC,OAAO,GAAGC,WAAW,CAAC,MAAM;IAChCP,aAAa,CAAC;MACZE,KAAK,EAAEL,MAAM,CAACM,UAAP,IAAqB,CADhB;MAEZC,MAAM,EAAEP,MAAM,CAACQ,WAAP,IAAsB;IAFlB,CAAD,CAAb;EAID,CAL0B,EAKxB,EALwB,CAA3B;EAMAG,cAAc,CAAC,QAAD,EAAWF,OAAX,EAAoBZ,kBAApB,CAAd;EACAc,cAAc,CAAC,mBAAD,EAAsBF,OAAtB,EAA+BZ,kBAA/B,CAAd;EACA,OAAOK,UAAP;AACF","names":["eventListerOptions","passive","browser","window","useViewportSize","windowSize","setWindowSize","useState","width","innerWidth","height","innerHeight","setSize","useCallback","useWindowEvent"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/hooks/src/use-viewport-size/use-viewport-size.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nconst eventListerOptions = {\n  passive: true,\n};\n\nconst browser = typeof window !== 'undefined';\n\nexport function useViewportSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: browser ? window.innerWidth : 0,\n    height: browser ? window.innerHeight : 0,\n  });\n\n  const setSize = useCallback(() => {\n    setWindowSize({\n      width: window.innerWidth || 0,\n      height: window.innerHeight || 0,\n    });\n  }, []);\n\n  useWindowEvent('resize', setSize, eventListerOptions);\n  useWindowEvent('orientationchange', setSize, eventListerOptions);\n\n  return windowSize;\n}\n"]},"metadata":{},"sourceType":"module"}