{"ast":null,"code":"// Hooks\nimport FetchGradeKanji from './FetchGradeKanji';\nimport FetchKanji from './FetchKanji';\nexport const fetchWrongAnswers = (answer, answers, kanjiArray, answerLength) => {\n  const wrongAnswer = {\n    option: kanjiArray[Math.floor(Math.random() * kanjiArray.length)],\n    correct: false\n  };\n\n  if (wrongAnswer.option !== answer) {\n    answers.push(wrongAnswer);\n  }\n\n  if (answers.length < answerLength - 1) {\n    fetchWrongAnswers(answer, answers, kanjiArray, answerLength);\n  } else {\n    answers.push({\n      option: answer,\n      correct: true\n    });\n  }\n\n  return shuffle(answers);\n};\nexport const fetchAnswerOptions = (kanjiLevel, answerLength, numberOfQuestions) => {\n  const questionsArray = [];\n  const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData;\n\n  if (kanjiArray.length > 0) {\n    for (let i = 0; i < numberOfQuestions; i++) {\n      const correctAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n      const kanjiForQuestion = FetchKanji(correctAnswer).kanjiData.kun_readings[0];\n      questionsArray.push({\n        question: `${kanjiForQuestion}`,\n        answers: fetchWrongAnswers(correctAnswer, [], kanjiArray, answerLength)\n      });\n    }\n  }\n\n  return questionsArray;\n};\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nexport const FetchQuizAnswers = (kanjiLevel, numberofAnswers) => {\n  return fetchAnswerOptions(kanjiLevel, numberofAnswers, 10);\n};\n_c = FetchQuizAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchQuizAnswers\");","map":{"version":3,"names":["FetchGradeKanji","FetchKanji","fetchWrongAnswers","answer","answers","kanjiArray","answerLength","wrongAnswer","option","Math","floor","random","length","correct","push","shuffle","fetchAnswerOptions","kanjiLevel","numberOfQuestions","questionsArray","gradeKanjiData","i","correctAnswer","kanjiForQuestion","kanjiData","kun_readings","question","array","currentIndex","randomIndex","FetchQuizAnswers","numberofAnswers"],"sources":["/Users/seancoleman/Projects/kanji/src/hooks/FetchQuizAnswers.tsx"],"sourcesContent":["// Hooks\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport FetchGradeKanji from './FetchGradeKanji'\nimport FetchKanji from './FetchKanji'\n\n\nexport interface QuestionProps {\n  question: string\n  answers: AnswerProps[]\n}\n\nexport interface AnswerProps {\n  option: string\n  correct:boolean\n}\n\nexport const fetchWrongAnswers = (answer:string,answers:AnswerProps[],kanjiArray:string[],answerLength:number) => {\n  const wrongAnswer:AnswerProps = {option: kanjiArray[Math.floor(Math.random()*kanjiArray.length)],correct: false}\n  \n  if(wrongAnswer.option!==answer){\n    answers.push(wrongAnswer)\n  }\n\n  if(answers.length < answerLength-1){\n    fetchWrongAnswers(answer,answers,kanjiArray,answerLength)\n  }\n  else {\n    answers.push({option: answer, correct:true})\n  }\n  return(shuffle(answers))\n}\n\nexport const fetchAnswerOptions = (kanjiLevel:number,answerLength:number,numberOfQuestions:number) => {\n\n  const questionsArray:QuestionProps[] = []\n  const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData\n  if(kanjiArray.length > 0) {\n    for(let i=0;i<numberOfQuestions;i++) {\n      const correctAnswer: string = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\n      const kanjiForQuestion: string = FetchKanji(correctAnswer).kanjiData.kun_readings[0]\n      questionsArray.push({ \n        question: `${kanjiForQuestion}`,\n        answers: fetchWrongAnswers(correctAnswer,[],kanjiArray,answerLength)\n      })\n    }\n  }\n\n  return questionsArray\n\n}\n\nfunction shuffle(array:AnswerProps[]) {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nexport const FetchQuizAnswers = (kanjiLevel:number,numberofAnswers:number) => {\n  return(fetchAnswerOptions(kanjiLevel,numberofAnswers,10))\n}"],"mappings":"AAAA;AAGA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAaA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,MAAD,EAAeC,OAAf,EAAqCC,UAArC,EAAyDC,YAAzD,KAAiF;EAChH,MAAMC,WAAuB,GAAG;IAACC,MAAM,EAAEH,UAAU,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcN,UAAU,CAACO,MAApC,CAAD,CAAnB;IAAiEC,OAAO,EAAE;EAA1E,CAAhC;;EAEA,IAAGN,WAAW,CAACC,MAAZ,KAAqBL,MAAxB,EAA+B;IAC7BC,OAAO,CAACU,IAAR,CAAaP,WAAb;EACD;;EAED,IAAGH,OAAO,CAACQ,MAAR,GAAiBN,YAAY,GAAC,CAAjC,EAAmC;IACjCJ,iBAAiB,CAACC,MAAD,EAAQC,OAAR,EAAgBC,UAAhB,EAA2BC,YAA3B,CAAjB;EACD,CAFD,MAGK;IACHF,OAAO,CAACU,IAAR,CAAa;MAACN,MAAM,EAAEL,MAAT;MAAiBU,OAAO,EAAC;IAAzB,CAAb;EACD;;EACD,OAAOE,OAAO,CAACX,OAAD,CAAd;AACD,CAdM;AAgBP,OAAO,MAAMY,kBAAkB,GAAG,CAACC,UAAD,EAAmBX,YAAnB,EAAuCY,iBAAvC,KAAoE;EAEpG,MAAMC,cAA8B,GAAG,EAAvC;EACA,MAAMd,UAAU,GAAGL,eAAe,CAACiB,UAAD,CAAf,CAA4BG,cAA/C;;EACA,IAAGf,UAAU,CAACO,MAAX,GAAoB,CAAvB,EAA0B;IACxB,KAAI,IAAIS,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,iBAAd,EAAgCG,CAAC,EAAjC,EAAqC;MACnC,MAAMC,aAAqB,GAAGjB,UAAU,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcN,UAAU,CAACO,MAApC,CAAD,CAAxC;MACA,MAAMW,gBAAwB,GAAGtB,UAAU,CAACqB,aAAD,CAAV,CAA0BE,SAA1B,CAAoCC,YAApC,CAAiD,CAAjD,CAAjC;MACAN,cAAc,CAACL,IAAf,CAAoB;QAClBY,QAAQ,EAAG,GAAEH,gBAAiB,EADZ;QAElBnB,OAAO,EAAEF,iBAAiB,CAACoB,aAAD,EAAe,EAAf,EAAkBjB,UAAlB,EAA6BC,YAA7B;MAFR,CAApB;IAID;EACF;;EAED,OAAOa,cAAP;AAED,CAjBM;;AAmBP,SAASJ,OAAT,CAAiBY,KAAjB,EAAsC;EACpC,IAAIC,YAAY,GAAGD,KAAK,CAACf,MAAzB;EAAA,IAAkCiB,WAAlC,CADoC,CAGpC;;EACA,OAAOD,YAAY,IAAI,CAAvB,EAA0B;IAExB;IACAC,WAAW,GAAGpB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBiB,YAA3B,CAAd;IACAA,YAAY,GAJY,CAMxB;;IACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACE,WAAD,CAA3B,IAA4C,CAC1CF,KAAK,CAACE,WAAD,CADqC,EACtBF,KAAK,CAACC,YAAD,CADiB,CAA5C;EAED;;EAED,OAAOD,KAAP;AACD;;AAED,OAAO,MAAMG,gBAAgB,GAAG,CAACb,UAAD,EAAmBc,eAAnB,KAA8C;EAC5E,OAAOf,kBAAkB,CAACC,UAAD,EAAYc,eAAZ,EAA4B,EAA5B,CAAzB;AACD,CAFM;KAAMD,gB"},"metadata":{},"sourceType":"module"}