{"ast":null,"code":"function getCurveProps(_ref) {\n  let {\n    size,\n    thickness,\n    sum,\n    value,\n    root,\n    offset\n  } = _ref;\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = Math.PI * radius * 2 / 100;\n  const strokeDasharray = root ? `${(100 - sum) * deg}, ${sum * deg}` : `${value * deg}, ${(100 - value) * deg}`;\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset\n  };\n}\n\nexport { getCurveProps };","map":{"version":3,"mappings":"AAAO,SAASA,aAAT,OAAsE;EAAA,IAA/C;IAAEC,IAAF;IAAQC,SAAR;IAAmBC,GAAnB;IAAwBC,KAAxB;IAA+BC,IAA/B;IAAqCC;EAArC,CAA+C;EAC3E,MAAMC,MAAM,GAAG,CAACN,IAAI,GAAG,GAAP,GAAaC,SAAS,GAAG,CAA1B,IAA+B,CAA9C;EACA,MAAMM,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAUH,MAAV,GAAmB,CAAnB,GAAuB,GAAnC;EACA,MAAMI,eAAe,GAAGN,IAAI,GAAI,GAAE,CAAC,MAAMF,GAAP,IAAcK,GAAI,KAAIL,GAAG,GAAGK,GAAI,EAAtC,GAA2C,GAAEJ,KAAK,GAAGI,GAAI,KAAI,CAAC,MAAMJ,KAAP,IAAgBI,GAAI,EAA7G;EACA,OAAO;IACLI,WAAW,EAAEV,SADR;IAELW,EAAE,EAAEZ,IAAI,GAAG,CAFN;IAGLa,EAAE,EAAEb,IAAI,GAAG,CAHN;IAILc,CAAC,EAAER,MAJE;IAKLS,SAAS,EAAEX,IAAI,GAAI,8BAA6BJ,IAAK,GAAtC,GAA2C,IALrD;IAMLU,eANK;IAOLM,gBAAgB,EAAEZ,IAAI,GAAG,CAAH,GAAOC;EAPxB,CAAP;AASF","names":["getCurveProps","size","thickness","sum","value","root","offset","radius","deg","Math","PI","strokeDasharray","strokeWidth","cx","cy","r","transform","strokeDashoffset"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/core/src/components/RingProgress/Curve/get-curve-props.ts"],"sourcesContent":["interface GetCurveProps {\n  size: number;\n  thickness: number;\n  sum: number;\n  value: number;\n  root: boolean;\n  offset: number;\n}\n\nexport function getCurveProps({ size, thickness, sum, value, root, offset }: GetCurveProps) {\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = (Math.PI * radius * 2) / 100;\n\n  const strokeDasharray = root\n    ? `${(100 - sum) * deg}, ${sum * deg}`\n    : `${value * deg}, ${(100 - value) * deg}`;\n\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}