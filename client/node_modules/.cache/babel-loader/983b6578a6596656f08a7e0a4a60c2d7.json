{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H5 } from \"../html/html\";\nimport { Icon, IconSize } from \"../icon/icon\";\nimport { Overlay } from \"../overlay/overlay\";\n\nvar Dialog =\n/** @class */\nfunction (_super) {\n  __extends(Dialog, _super);\n\n  function Dialog(props) {\n    var _this = _super.call(this, props) || this;\n\n    var id = uniqueId(\"bp-dialog\");\n    _this.titleId = \"title-\".concat(id);\n    return _this;\n  }\n\n  Dialog.prototype.render = function () {\n    return React.createElement(Overlay, __assign({}, this.props, {\n      className: Classes.OVERLAY_SCROLL_CONTAINER,\n      hasBackdrop: true\n    }), React.createElement(\"div\", {\n      className: Classes.DIALOG_CONTAINER,\n      ref: this.props.containerRef\n    }, React.createElement(\"div\", {\n      className: classNames(Classes.DIALOG, this.props.className),\n      role: \"dialog\",\n      \"aria-labelledby\": this.props[\"aria-labelledby\"] || (this.props.title ? this.titleId : undefined),\n      \"aria-describedby\": this.props[\"aria-describedby\"],\n      style: this.props.style\n    }, this.maybeRenderHeader(), this.props.children)));\n  };\n\n  Dialog.prototype.validateProps = function (props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n  };\n\n  Dialog.prototype.maybeRenderCloseButton = function () {\n    // show close button if prop is undefined or null\n    // this gives us a behavior as if the default value were `true`\n    if (this.props.isCloseButtonShown !== false) {\n      return React.createElement(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: React.createElement(Icon, {\n          icon: \"cross\",\n          size: IconSize.STANDARD\n        }),\n        minimal: true,\n        onClick: this.props.onClose\n      });\n    } else {\n      return undefined;\n    }\n  };\n\n  Dialog.prototype.maybeRenderHeader = function () {\n    var _a = this.props,\n        icon = _a.icon,\n        title = _a.title;\n\n    if (title == null) {\n      return undefined;\n    }\n\n    return React.createElement(\"div\", {\n      className: Classes.DIALOG_HEADER\n    }, React.createElement(Icon, {\n      icon: icon,\n      size: IconSize.STANDARD,\n      \"aria-hidden\": true,\n      tabIndex: -1\n    }), React.createElement(H5, {\n      id: this.titleId\n    }, title), this.maybeRenderCloseButton());\n  };\n\n  Dialog.defaultProps = {\n    canOutsideClickClose: true,\n    isOpen: false\n  };\n  Dialog.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Dialog\");\n  return Dialog;\n}(AbstractPureComponent2);\n\nexport { Dialog };","map":{"version":3,"mappings":"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","names":["classNames","React","AbstractPureComponent2","Classes","Errors","DISPLAYNAME_PREFIX","uniqueId","Button","H5","Icon","IconSize","Overlay","__extends","props","_super","id","_this","titleId","Dialog","__assign","className","OVERLAY_SCROLL_CONTAINER","hasBackdrop","DIALOG_CONTAINER","ref","containerRef","DIALOG","role","title","undefined","style","maybeRenderHeader","children","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","DIALOG_CLOSE_BUTTON","size","STANDARD","minimal","onClick","onClose","DIALOG_HEADER","tabIndex","maybeRenderCloseButton","canOutsideClickClose","isOpen"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@blueprintjs/core/src/components/dialog/dialog.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes, IRef } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, MaybeElement, Props } from \"../../common/props\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H5 } from \"../html/html\";\nimport { Icon, IconName, IconSize } from \"../icon/icon\";\nimport { IBackdropProps, Overlay, OverlayableProps } from \"../overlay/overlay\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type DialogProps = IDialogProps;\n/** @deprecated use DialogProps */\nexport interface IDialogProps extends OverlayableProps, IBackdropProps, Props {\n    /** Dialog contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Dialog always has a backdrop so this prop is excluded from the public API.\n     *\n     * @internal\n     */\n    hasBackdrop?: boolean;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * dialog's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n\n    /**\n     * Ref supplied to the `Classes.DIALOG_CONTAINER` element.\n     */\n    containerRef?: IRef<HTMLDivElement>;\n\n    /**\n     * ID of the element that contains title or label text for this dialog.\n     *\n     * By default, if the `title` prop is supplied, this component will generate\n     * a unique ID for the `<H5>` title element and use that ID here.\n     */\n    \"aria-labelledby\"?: string;\n\n    /**\n     * ID of an element that contains description text inside this dialog.\n     */\n    \"aria-describedby\"?: string;\n}\n\nexport class Dialog extends AbstractPureComponent2<DialogProps> {\n    public static defaultProps: DialogProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n    };\n\n    private titleId: string;\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Dialog`;\n\n    public constructor(props: DialogProps) {\n        super(props);\n\n        const id = uniqueId(\"bp-dialog\");\n        this.titleId = `title-${id}`;\n    }\n\n    public render() {\n        return (\n            <Overlay {...this.props} className={Classes.OVERLAY_SCROLL_CONTAINER} hasBackdrop={true}>\n                <div className={Classes.DIALOG_CONTAINER} ref={this.props.containerRef}>\n                    <div\n                        className={classNames(Classes.DIALOG, this.props.className)}\n                        role=\"dialog\"\n                        aria-labelledby={this.props[\"aria-labelledby\"] || (this.props.title ? this.titleId : undefined)}\n                        aria-describedby={this.props[\"aria-describedby\"]}\n                        style={this.props.style}\n                    >\n                        {this.maybeRenderHeader()}\n                        {this.props.children}\n                    </div>\n                </div>\n            </Overlay>\n        );\n    }\n\n    protected validateProps(props: DialogProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // show close button if prop is undefined or null\n        // this gives us a behavior as if the default value were `true`\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<Icon icon=\"cross\" size={IconSize.STANDARD} />}\n                    minimal={true}\n                    onClick={this.props.onClose}\n                />\n            );\n        } else {\n            return undefined;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return undefined;\n        }\n        return (\n            <div className={Classes.DIALOG_HEADER}>\n                <Icon icon={icon} size={IconSize.STANDARD} aria-hidden={true} tabIndex={-1} />\n                <H5 id={this.titleId}>{title}</H5>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}