{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction serializeJSON(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error(\"@mantine/hooks use-local-storage: Failed to serialize the value\");\n  }\n}\n\nfunction deserializeJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction useLocalStorage(_ref) {\n  let {\n    key,\n    defaultValue = void 0,\n    getInitialValueInEffect = false,\n    deserialize = deserializeJSON,\n    serialize = serializeJSON\n  } = _ref;\n\n  var _a;\n\n  const [value, setValue] = useState(typeof window !== \"undefined\" && \"localStorage\" in window && !getInitialValueInEffect ? deserialize((_a = window.localStorage.getItem(key)) != null ? _a : void 0) : defaultValue != null ? defaultValue : \"\");\n  const setLocalStorageValue = useCallback(val => {\n    if (val instanceof Function) {\n      setValue(current => {\n        const result = val(current);\n        window.localStorage.setItem(key, serialize(result));\n        window.dispatchEvent(new CustomEvent(\"mantine-local-storage\", {\n          detail: {\n            key,\n            value: val(current)\n          }\n        }));\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, serialize(val));\n      window.dispatchEvent(new CustomEvent(\"mantine-local-storage\", {\n        detail: {\n          key,\n          value: val\n        }\n      }));\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", event => {\n    var _a2;\n\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize((_a2 = event.newValue) != null ? _a2 : void 0));\n    }\n  });\n  useWindowEvent(\"mantine-local-storage\", event => {\n    if (event.detail.key === key) {\n      setValue(event.detail.value);\n    }\n  });\n  useEffect(() => {\n    if (defaultValue !== void 0 && value === void 0) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  useEffect(() => {\n    var _a2;\n\n    if (getInitialValueInEffect) {\n      setValue(deserialize((_a2 = window.localStorage.getItem(key)) != null ? _a2 : void 0) || (defaultValue != null ? defaultValue : \"\"));\n    }\n  }, []);\n  return [value === void 0 ? defaultValue : value, setLocalStorageValue];\n}\n\nconst useLocalStorageValue = useLocalStorage;\nexport { useLocalStorage, useLocalStorageValue };","map":{"version":3,"mappings":"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","names":["serializeJSON","value","JSON","stringify","error","Error","deserializeJSON","parse","e","useLocalStorage","key","defaultValue","getInitialValueInEffect","deserialize","serialize","_a","setValue","useState","window","localStorage","getItem","setLocalStorageValue","useCallback","val","Function","current","result","setItem","dispatchEvent","CustomEvent","detail","useWindowEvent","event","_a2","storageArea","newValue","useEffect","useLocalStorageValue"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/hooks/src/use-local-storage/use-local-storage.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface UseLocalStorage<T> {\n  /** Local storage key */\n  key: string;\n\n  /** Default value that will be set if value is not found in local storage */\n  defaultValue?: T;\n\n  /** If set to true, value will be update is useEffect after mount */\n  getInitialValueInEffect?: boolean;\n\n  /** Function to serialize value into string to be save in local storage */\n  serialize?(value: T): string;\n\n  /** Function to deserialize string value from local storage to value */\n  deserialize?(value: string): T;\n}\n\nfunction serializeJSON<T>(value: T) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    throw new Error('@mantine/hooks use-local-storage: Failed to serialize the value');\n  }\n}\n\nfunction deserializeJSON(value: string) {\n  try {\n    return JSON.parse(value);\n  } catch {\n    return value;\n  }\n}\n\nexport function useLocalStorage<T = string>({\n  key,\n  defaultValue = undefined,\n  getInitialValueInEffect = false,\n  deserialize = deserializeJSON,\n  serialize = serializeJSON,\n}: UseLocalStorage<T>) {\n  const [value, setValue] = useState<T>(\n    typeof window !== 'undefined' && 'localStorage' in window && !getInitialValueInEffect\n      ? deserialize(window.localStorage.getItem(key) ?? undefined)\n      : ((defaultValue ?? '') as T)\n  );\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (val instanceof Function) {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, serialize(result));\n          window.dispatchEvent(\n            new CustomEvent('mantine-local-storage', { detail: { key, value: val(current) } })\n          );\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, serialize(val));\n        window.dispatchEvent(\n          new CustomEvent('mantine-local-storage', { detail: { key, value: val } })\n        );\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(deserialize(event.newValue ?? undefined));\n    }\n  });\n\n  useWindowEvent('mantine-local-storage', (event) => {\n    if (event.detail.key === key) {\n      setValue(event.detail.value);\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue !== undefined && value === undefined) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  useEffect(() => {\n    if (getInitialValueInEffect) {\n      setValue(\n        deserialize(window.localStorage.getItem(key) ?? undefined) || ((defaultValue ?? '') as T)\n      );\n    }\n  }, []);\n\n  return [value === undefined ? defaultValue : value, setLocalStorageValue] as const;\n}\n\nexport const useLocalStorageValue = useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}