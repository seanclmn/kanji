{"ast":null,"code":"import React, { forwardRef, cloneElement } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useMantineDefaultProps } from '@mantine/styles';\nimport { InputWrapper } from '../../InputWrapper/InputWrapper.js';\nimport { Checkbox } from '../Checkbox.js';\nimport { Group } from '../../Group/Group.js';\nimport { filterChildrenByType } from '../../../utils/filter-children-by-type/filter-children-by-type.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  orientation: \"horizontal\",\n  spacing: \"lg\",\n  size: \"sm\"\n};\nconst CheckboxGroup = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"CheckboxGroup\", defaultProps, props),\n        {\n    children,\n    value,\n    defaultValue,\n    onChange,\n    orientation,\n    spacing,\n    color,\n    size,\n    classNames,\n    styles,\n    wrapperProps,\n    errorProps,\n    labelProps,\n    descriptionProps\n  } = _a,\n        others = __objRest(_a, [\"children\", \"value\", \"defaultValue\", \"onChange\", \"orientation\", \"spacing\", \"color\", \"size\", \"classNames\", \"styles\", \"wrapperProps\", \"errorProps\", \"labelProps\", \"descriptionProps\"]);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n    rule: val => Array.isArray(val)\n  });\n  const checkboxes = filterChildrenByType(children, Checkbox).map((checkbox, index) => cloneElement(checkbox, {\n    key: index,\n    checked: _value.includes(checkbox.props.value),\n    color,\n    size,\n    classNames,\n    styles,\n    __staticSelector: \"CheckboxGroup\",\n    onChange: event => {\n      const itemValue = event.currentTarget.value;\n      setValue(_value.includes(itemValue) ? _value.filter(item => item !== itemValue) : [..._value, itemValue]);\n    }\n  }));\n  return /* @__PURE__ */React.createElement(InputWrapper, __spreadValues(__spreadValues({\n    labelElement: \"div\",\n    size,\n    __staticSelector: \"CheckboxGroup\",\n    classNames,\n    styles,\n    ref,\n    errorProps,\n    descriptionProps,\n    labelProps\n  }, wrapperProps), others), /* @__PURE__ */React.createElement(Group, {\n    spacing,\n    direction: orientation === \"horizontal\" ? \"row\" : \"column\",\n    sx: {\n      paddingTop: 5\n    }\n  }, checkboxes));\n});\nCheckboxGroup.displayName = \"@mantine/core/CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","orientation","spacing","size","CheckboxGroup","forwardRef","props","ref","_a","useMantineDefaultProps","children","defaultValue","onChange","color","classNames","styles","wrapperProps","errorProps","labelProps","descriptionProps","others","_value","setValue","useUncontrolled","finalValue","rule","val","Array","isArray","checkboxes","filterChildrenByType","Checkbox","map","checkbox","index","cloneElement","checked","includes","__staticSelector","event","itemValue","currentTarget","filter","item","React","createElement","InputWrapper","labelElement","Group","direction","sx","paddingTop","displayName"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/core/src/components/Checkbox/CheckboxGroup/CheckboxGroup.tsx"],"sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { filterChildrenByType } from '../../../utils';\nimport {\n  InputWrapper,\n  InputWrapperBaseProps,\n  InputWrapperStylesNames,\n} from '../../InputWrapper/InputWrapper';\nimport { Checkbox, CheckboxStylesNames } from '../Checkbox';\nimport { Group } from '../../Group/Group';\n\nexport type CheckboxGroupStylesNames = InputWrapperStylesNames | CheckboxStylesNames;\n\nexport interface CheckboxGroupProps\n  extends DefaultProps<CheckboxGroupStylesNames>,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange'> {\n  /** <Checkbox /> components only */\n  children: React.ReactNode;\n\n  /** Value of currently selected checkbox */\n  value?: string[];\n\n  /** Initial value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called when value changes */\n  onChange?(value: string[]): void;\n\n  /** Horizontal or vertical orientation */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** Spacing between checkboxes in horizontal orientation */\n  spacing?: MantineNumberSize;\n\n  /** Activated checkbox color from theme.colors */\n  color?: MantineColor;\n\n  /** Predefined label fontSize, checkbox width, height and border-radius */\n  size?: MantineSize;\n\n  /** Props spread to InputWrapper */\n  wrapperProps?: { [key: string]: any };\n}\n\nconst defaultProps: Partial<CheckboxGroupProps> = {\n  orientation: 'horizontal',\n  spacing: 'lg',\n  size: 'sm',\n};\n\nexport const CheckboxGroup = forwardRef<HTMLDivElement, CheckboxGroupProps>(\n  (props: CheckboxGroupProps, ref) => {\n    const {\n      children,\n      value,\n      defaultValue,\n      onChange,\n      orientation,\n      spacing,\n      color,\n      size,\n      classNames,\n      styles,\n      wrapperProps,\n      errorProps,\n      labelProps,\n      descriptionProps,\n      ...others\n    } = useMantineDefaultProps('CheckboxGroup', defaultProps, props);\n\n    const [_value, setValue] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: [],\n      onChange,\n      rule: (val) => Array.isArray(val),\n    });\n\n    const checkboxes = filterChildrenByType(children, Checkbox).map((checkbox, index) =>\n      cloneElement(checkbox, {\n        key: index,\n        checked: _value.includes(checkbox.props.value),\n        color,\n        size,\n        classNames,\n        styles,\n        __staticSelector: 'CheckboxGroup',\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          const itemValue = event.currentTarget.value;\n          setValue(\n            _value.includes(itemValue)\n              ? _value.filter((item) => item !== itemValue)\n              : [..._value, itemValue]\n          );\n        },\n      })\n    );\n\n    return (\n      <InputWrapper\n        labelElement=\"div\"\n        size={size}\n        __staticSelector=\"CheckboxGroup\"\n        classNames={classNames}\n        styles={styles}\n        ref={ref}\n        errorProps={errorProps}\n        descriptionProps={descriptionProps}\n        labelProps={labelProps}\n        {...wrapperProps}\n        {...others}\n      >\n        <Group\n          spacing={spacing}\n          direction={orientation === 'horizontal' ? 'row' : 'column'}\n          sx={{ paddingTop: 5 }}\n        >\n          {checkboxes}\n        </Group>\n      </InputWrapper>\n    );\n  }\n);\n\nCheckboxGroup.displayName = '@mantine/core/CheckboxGroup';\n"]},"metadata":{},"sourceType":"module"}