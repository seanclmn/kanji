{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Intent } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { MultiSlider } from \"./multiSlider\";\nvar RangeIndex;\n\n(function (RangeIndex) {\n  RangeIndex[RangeIndex[\"START\"] = 0] = \"START\";\n  RangeIndex[RangeIndex[\"END\"] = 1] = \"END\";\n})(RangeIndex || (RangeIndex = {}));\n\nvar RangeSlider =\n/** @class */\nfunction (_super) {\n  __extends(RangeSlider, _super);\n\n  function RangeSlider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RangeSlider.prototype.render = function () {\n    var _a = this.props,\n        value = _a.value,\n        props = __rest(_a, [\"value\"]);\n\n    return React.createElement(MultiSlider, __assign({}, props), React.createElement(MultiSlider.Handle, {\n      value: value[RangeIndex.START],\n      type: \"start\",\n      intentAfter: props.intent\n    }), React.createElement(MultiSlider.Handle, {\n      value: value[RangeIndex.END],\n      type: \"end\"\n    }));\n  };\n\n  RangeSlider.prototype.validateProps = function (props) {\n    var value = props.value;\n\n    if (value == null || value[RangeIndex.START] == null || value[RangeIndex.END] == null) {\n      throw new Error(Errors.RANGESLIDER_NULL_VALUE);\n    }\n  };\n\n  RangeSlider.defaultProps = __assign(__assign({}, MultiSlider.defaultSliderProps), {\n    intent: Intent.PRIMARY,\n    value: [0, 10]\n  });\n  RangeSlider.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".RangeSlider\");\n  return RangeSlider;\n}(AbstractPureComponent2);\n\nexport { RangeSlider };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,sBAAT,EAAiCC,MAAjC,QAA+C,cAA/C;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAA2BC,WAA3B,QAA8C,eAA9C;AAIA,IAAKC,UAAL;;AAAA,WAAKA,UAAL,EAAe;EACXA;EACAA;AACH,CAHD,EAAKA,UAAU,KAAVA,UAAU,MAAf;;AAuBA;AAAA;AAAA;EAAiCC;;EAAjC;;EAyBC;;EAhBUC,+BAAP;IACI,IAAMC,KAAsB,KAAKC,KAAjC;IAAA,IAAQC,KAAK,WAAb;IAAA,IAAkBD,KAAK,cAAjB,SAAiB,CAAvB;;IACA,OACIV,oBAACK,WAAD,EAAYO,aAAKF,KAAL,CAAZ,EACIV,oBAACK,WAAW,CAACQ,MAAb,EAAmB;MAACF,KAAK,EAAEA,KAAM,CAACL,UAAU,CAACQ,KAAZ,CAAd;MAAkCC,IAAI,EAAC,OAAvC;MAA+CC,WAAW,EAAEN,KAAK,CAACO;IAAlE,CAAnB,CADJ,EAEIjB,oBAACK,WAAW,CAACQ,MAAb,EAAmB;MAACF,KAAK,EAAEA,KAAM,CAACL,UAAU,CAACY,GAAZ,CAAd;MAAgCH,IAAI,EAAC;IAArC,CAAnB,CAFJ,CADJ;EAMH,CARM;;EAUGP,sCAAV,UAAwBE,KAAxB,EAA+C;IACnC,SAAK,GAAKA,KAAK,MAAf;;IACR,IAAIC,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACL,UAAU,CAACQ,KAAZ,CAAL,IAA2B,IAA5C,IAAoDH,KAAK,CAACL,UAAU,CAACY,GAAZ,CAAL,IAAyB,IAAjF,EAAuF;MACnF,MAAM,IAAIC,KAAJ,CAAUhB,MAAM,CAACiB,sBAAjB,CAAN;IACH;EACJ,CALS;;EAlBIZ,2BAAYI,sBACnBP,WAAW,CAACgB,kBADO,GACW;IACjCJ,MAAM,EAAEf,MAAM,CAACoB,OADkB;IAEjCX,KAAK,EAAE,CAAC,CAAD,EAAI,EAAJ;EAF0B,CADX,CAAZ;EAMAH,0BAAc,UAAGJ,kBAAH,EAAqB,cAArB,CAAd;EAkBlB;AAAC,CAzBD,CAAiCH,sBAAjC;;SAAaO","names":["React","AbstractPureComponent2","Intent","Errors","DISPLAYNAME_PREFIX","MultiSlider","RangeIndex","__extends","RangeSlider","_a","props","value","__assign","Handle","START","type","intentAfter","intent","END","Error","RANGESLIDER_NULL_VALUE","defaultSliderProps","PRIMARY"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@blueprintjs/core/src/components/slider/rangeSlider.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Intent } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { ISliderBaseProps, MultiSlider } from \"./multiSlider\";\n\nexport type NumberRange = [number, number];\n\nenum RangeIndex {\n    START = 0,\n    END = 1,\n}\n\n// eslint-disable-next-line deprecation/deprecation\nexport type RangeSliderProps = IRangeSliderProps;\n/** @deprecated use RangeSliderProps */\nexport interface IRangeSliderProps extends ISliderBaseProps {\n    /**\n     * Range value of slider. Handles will be rendered at each position in the range.\n     *\n     * @default [0, 10]\n     */\n    value?: NumberRange;\n\n    /** Callback invoked when the range value changes. */\n    onChange?(value: NumberRange): void;\n\n    /** Callback invoked when a handle is released. */\n    onRelease?(value: NumberRange): void;\n}\n\nexport class RangeSlider extends AbstractPureComponent2<RangeSliderProps> {\n    public static defaultProps: RangeSliderProps = {\n        ...MultiSlider.defaultSliderProps,\n        intent: Intent.PRIMARY,\n        value: [0, 10],\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.RangeSlider`;\n\n    public render() {\n        const { value, ...props } = this.props;\n        return (\n            <MultiSlider {...props}>\n                <MultiSlider.Handle value={value![RangeIndex.START]} type=\"start\" intentAfter={props.intent} />\n                <MultiSlider.Handle value={value![RangeIndex.END]} type=\"end\" />\n            </MultiSlider>\n        );\n    }\n\n    protected validateProps(props: RangeSliderProps) {\n        const { value } = props;\n        if (value == null || value[RangeIndex.START] == null || value[RangeIndex.END] == null) {\n            throw new Error(Errors.RANGESLIDER_NULL_VALUE);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}