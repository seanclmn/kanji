{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nconst defaultValue = {\n  downlink: 10,\n  effectiveType: \"4g\",\n  saveData: false,\n  rtt: 50\n};\n\nfunction getConnection() {\n  if (typeof navigator === \"undefined\") {\n    return defaultValue;\n  }\n\n  const _navigator = navigator;\n  const connection = _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n\n  if (!connection) {\n    return defaultValue;\n  }\n\n  return {\n    downlink: connection == null ? void 0 : connection.downlink,\n    effectiveType: connection == null ? void 0 : connection.effectiveType,\n    saveData: connection == null ? void 0 : connection.saveData,\n    rtt: connection == null ? void 0 : connection.rtt\n  };\n}\n\nfunction useNetwork() {\n  const [status, setStatus] = useState(__spreadValues({\n    online: true\n  }, getConnection()));\n  const handleConnectionChange = useCallback(() => setStatus(current => __spreadValues(__spreadValues({}, current), getConnection())), []);\n  useWindowEvent(\"online\", () => setStatus(__spreadValues({\n    online: true\n  }, getConnection())));\n  useWindowEvent(\"offline\", () => setStatus(__spreadValues({\n    online: false\n  }, getConnection())));\n  useEffect(() => {\n    if (navigator.connection) {\n      navigator.connection.addEventListener(\"change\", handleConnectionChange);\n      return () => navigator.connection.removeEventListener(\"change\", handleConnectionChange);\n    }\n\n    return void 0;\n  }, []);\n  return status;\n}\n\nexport { useNetwork };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","defaultValue","downlink","effectiveType","saveData","rtt","getConnection","navigator","_navigator","connection","mozConnection","webkitConnection","useNetwork","status","setStatus","useState","online","handleConnectionChange","useCallback","current","useWindowEvent","useEffect","addEventListener","removeEventListener"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/hooks/src/use-network/use-network.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface NetworkStatus {\n  downlink: number;\n  effectiveType: 'slow-2g' | '2g' | '3g' | '4g';\n  saveData: boolean;\n  rtt: number;\n}\n\nconst defaultValue: NetworkStatus = {\n  downlink: 10,\n  effectiveType: '4g',\n  saveData: false,\n  rtt: 50,\n};\n\nfunction getConnection(): NetworkStatus {\n  if (typeof navigator === 'undefined') {\n    return defaultValue;\n  }\n\n  const _navigator = navigator as any;\n  const connection: any =\n    _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n\n  if (!connection) {\n    return defaultValue;\n  }\n\n  return {\n    downlink: connection?.downlink,\n    effectiveType: connection?.effectiveType,\n    saveData: connection?.saveData,\n    rtt: connection?.rtt,\n  };\n}\n\nexport function useNetwork() {\n  const [status, setStatus] = useState({ online: true, ...getConnection() });\n  const handleConnectionChange = useCallback(\n    () => setStatus((current) => ({ ...current, ...getConnection() })),\n    []\n  );\n\n  useWindowEvent('online', () => setStatus({ online: true, ...getConnection() }));\n  useWindowEvent('offline', () => setStatus({ online: false, ...getConnection() }));\n\n  useEffect(() => {\n    if (navigator.connection) {\n      navigator.connection.addEventListener('change', handleConnectionChange);\n      return () => navigator.connection.removeEventListener('change', handleConnectionChange);\n    }\n\n    return undefined;\n  }, []);\n\n  return status;\n}\n"]},"metadata":{},"sourceType":"module"}