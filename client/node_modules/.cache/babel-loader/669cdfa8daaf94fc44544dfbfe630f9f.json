{"ast":null,"code":"var _jsxFileName = \"/Users/seancoleman/Projects/kanji/client/src/components/QuizGame.tsx\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizGame(_ref) {\n  _s();\n\n  let {\n    questions,\n    endQuiz\n  } = _ref;\n  console.log(questions);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [answered, setAnswered] = useState(true);\n  const [colors, setColors] = useState([\"blue\", \"blue\", \"blue\", \"blue\"]);\n\n  const phraseQuestion = () => {\n    switch (questions[questionIndex].question[0]) {\n      case \"readings_on\":\n        return `Which kanji has an on reading of ${questions[questionIndex].question[1]}`;\n\n      case \"readings_kun\":\n        return `Which kanji has a kun reading of ${questions[questionIndex].question[1]}`;\n\n      case \"meanings\":\n        return `Which kanji has a meaning of ${questions[questionIndex].question[1]}`;\n    }\n  };\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex + 1);\n    setAnswered(true);\n    setColors([\"blue\", \"blue\", \"blue\", \"blue\"]);\n  };\n\n  const answerQuestion = index => {\n    if (answered) {\n      setAnswered(false);\n      let newColors = colors;\n      if (questions[questionIndex].options[index].correct) newColors[index] = \"green\";else newColors[index] = \"red\";\n      setColors(newColors);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto w-[70%]\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: phraseQuestion()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: questions[questionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => answerQuestion(index),\n        color: colors[index],\n        size: \"md\",\n        children: option.optionName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center my-[50px]\",\n      children: questionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n        size: \"md\",\n        disabled: answered,\n        onClick: () => nextQuestion(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        size: \"md\",\n        disabled: answered,\n        onClick: () => endQuiz(),\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 129\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizGame, \"mV3l8W7nusTM04JOZXxlRC36Wcc=\");\n\n_c = QuizGame;\nexport default QuizGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizGame\");","map":{"version":3,"names":["React","useState","Button","QuizGame","questions","endQuiz","console","log","questionIndex","setQuestionIndex","answered","setAnswered","colors","setColors","phraseQuestion","question","nextQuestion","answerQuestion","index","newColors","options","correct","map","option","optionName","length"],"sources":["/Users/seancoleman/Projects/kanji/client/src/components/QuizGame.tsx"],"sourcesContent":["// @ts-nocheck\nimport React,{useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport QuizAnswerButton from './QuizAnswerButton'\n\nimport FetchKanji from '../hooks/FetchKanji'\n\nimport {Button} from '@mantine/core'\n\nexport interface QuizGameProps {\n  questions: Question[]|string[]\n  endQuiz: Function\n}\n\nexport interface Question{\n  question: string[]\n  options: OptionProps[]\n}\n\nexport interface OptionProps {\n  correct: boolean\n  optionName: string\n}\n\nfunction QuizGame({questions, endQuiz}:QuizGameProps) {\n  console.log(questions)\n  const [questionIndex,setQuestionIndex]=useState(0)\n  const [answered,setAnswered]=useState(true)\n  const [colors,setColors]=useState([\"blue\",\"blue\",\"blue\",\"blue\"])\n\n  const phraseQuestion = () => {\n    switch(questions[questionIndex].question[0]) {\n      case \"readings_on\":\n        return `Which kanji has an on reading of ${questions[questionIndex].question[1]}`\n      case \"readings_kun\":\n        return `Which kanji has a kun reading of ${questions[questionIndex].question[1]}`\n      case \"meanings\":\n        return `Which kanji has a meaning of ${questions[questionIndex].question[1]}`\n\n    }\n\n  }\n\n  const nextQuestion = () => {\n    setQuestionIndex(questionIndex+1)\n    setAnswered(true)\n    setColors([\"blue\",\"blue\",\"blue\",\"blue\"])\n  }\n\n  const answerQuestion = (index:number) => {\n    if(answered){\n      \n      setAnswered(false)\n      let newColors = colors\n      if(questions[questionIndex].options[index].correct)\n        newColors[index] = \"green\"\n      else\n        newColors[index] = \"red\"\n\n      setColors(newColors)\n    }\n  }\n\n  return (\n    <div className=\"mx-auto w-[70%]\">\n      <p>{phraseQuestion()}</p>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {questions[questionIndex].options.map((option,index)=> \n          <Button \n            onClick={()=>(answerQuestion(index))}\n            color={colors[index]}\n            key={index}\n            size=\"md\"\n            >\n              {option.optionName}\n            </Button>)}\n      </div>\n\n      <div className='flex flex-row justify-center my-[50px]'>\n        {questionIndex < questions.length-1 ? <Button size=\"md\" disabled={answered} onClick={()=>nextQuestion()}>Next</Button>: <Button size=\"md\" disabled={answered} onClick={()=>endQuiz()}>Finish</Button>}\n\n      </div>  \n    </div>\n )\n}\n\nexport default QuizGame\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}