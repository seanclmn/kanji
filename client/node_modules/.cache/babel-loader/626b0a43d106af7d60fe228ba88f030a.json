{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { isNodeEnv } from \"./utils\";\n/**\n * An abstract component that Blueprint components can extend\n * in order to add some common functionality like runtime props validation.\n *\n * @deprecated componentWillReceiveProps is deprecated in React 16.9; use AbstractPureComponent2 instead\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nvar AbstractPureComponent =\n/** @class */\nfunction (_super) {\n  __extends(AbstractPureComponent, _super);\n\n  function AbstractPureComponent(props, context) {\n    var _this = _super.call(this, props, context) || this; // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op\n\n\n    _this.timeoutIds = [];\n    /**\n     * Clear all known timeouts.\n     */\n\n    _this.clearTimeouts = function () {\n      if (_this.timeoutIds.length > 0) {\n        for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {\n          var timeoutId = _a[_i];\n          window.clearTimeout(timeoutId);\n        }\n\n        _this.timeoutIds = [];\n      }\n    };\n\n    if (!isNodeEnv(\"production\")) {\n      _this.validateProps(_this.props);\n    }\n\n    return _this;\n  }\n\n  AbstractPureComponent.prototype.componentWillReceiveProps = function (nextProps) {\n    if (!isNodeEnv(\"production\")) {\n      this.validateProps(nextProps);\n    }\n  };\n\n  AbstractPureComponent.prototype.componentWillUnmount = function () {\n    this.clearTimeouts();\n  };\n  /**\n   * Set a timeout and remember its ID.\n   * All stored timeouts will be cleared when component unmounts.\n   *\n   * @returns a \"cancel\" function that will clear timeout when invoked.\n   */\n\n\n  AbstractPureComponent.prototype.setTimeout = function (callback, timeout) {\n    var handle = window.setTimeout(callback, timeout);\n    this.timeoutIds.push(handle);\n    return function () {\n      return window.clearTimeout(handle);\n    };\n  };\n  /**\n   * Ensures that the props specified for a component are valid.\n   * Implementations should check that props are valid and usually throw an Error if they are not.\n   * Implementations should not duplicate checks that the type system already guarantees.\n   *\n   * This method should be used instead of React's\n   * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.\n   * Like propTypes, these runtime checks run only in development mode.\n   */\n\n\n  AbstractPureComponent.prototype.validateProps = function (_props) {// implement in subclass\n  };\n\n  return AbstractPureComponent;\n}(React.PureComponent);\n\nexport { AbstractPureComponent };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,SAAT,QAA0B,SAA1B;AAEA;;;;;;AAMA;;AACA;AAAA;AAAA;EAA+DC;;EAO3D,+BAAYC,KAAZ,EAAsBC,OAAtB,EAAmC;IAAnC,YACIC,kBAAMF,KAAN,EAAaC,OAAb,KAAqB,IADzB,CAAmC,CAHnC;;;IACQE,mBAAuB,EAAvB;IA+BR;;;;IAGOA,sBAAgB;MACnB,IAAIA,KAAI,CAACC,UAAL,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;QAC5B,KAAwB,sBAAI,CAACD,UAA7B,EAAwBE,cAAxB,EAAwBA,IAAxB,EAAyC;UAApC,IAAMC,SAAS,SAAf;UACDC,MAAM,CAACC,YAAP,CAAoBF,SAApB;QACH;;QACDJ,KAAI,CAACC,UAAL,GAAkB,EAAlB;MACH;IACJ,CAPM;;IA9BH,IAAI,CAACN,SAAS,CAAC,YAAD,CAAd,EAA8B;MAC1BK,KAAI,CAACO,aAAL,CAAmBP,KAAI,CAACH,KAAxB;IACH;;;EACJ;;EAEMW,4DAAP,UAAiCC,SAAjC,EAA8E;IAC1E,IAAI,CAACd,SAAS,CAAC,YAAD,CAAd,EAA8B;MAC1B,KAAKY,aAAL,CAAmBE,SAAnB;IACH;EACJ,CAJM;;EAMAD,uDAAP;IACI,KAAKE,aAAL;EACH,CAFM;EAIP;;;;;;;;EAMOF,6CAAP,UAAkBG,QAAlB,EAAwCC,OAAxC,EAAwD;IACpD,IAAMC,MAAM,GAAGR,MAAM,CAACS,UAAP,CAAkBH,QAAlB,EAA4BC,OAA5B,CAAf;IACA,KAAKX,UAAL,CAAgBc,IAAhB,CAAqBF,MAArB;IACA,OAAO;MAAM,aAAM,CAACP,YAAP,CAAoBO,MAApB;IAA2B,CAAxC;EACH,CAJM;EAkBP;;;;;;;;;;;EASUL,gDAAV,UAAwBQ,MAAxB,EAAkE,CAC9D;EACH,CAFS;;EAGd;AAAC,CA5DD,CAA+DtB,KAAK,CAACuB,aAArE","names":["React","isNodeEnv","__extends","props","context","_super","_this","timeoutIds","length","_i","timeoutId","window","clearTimeout","validateProps","AbstractPureComponent","nextProps","clearTimeouts","callback","timeout","handle","setTimeout","push","_props","PureComponent"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@blueprintjs/core/src/common/abstractPureComponent.ts"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { isNodeEnv } from \"./utils\";\n\n/**\n * An abstract component that Blueprint components can extend\n * in order to add some common functionality like runtime props validation.\n *\n * @deprecated componentWillReceiveProps is deprecated in React 16.9; use AbstractPureComponent2 instead\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport abstract class AbstractPureComponent<P, S = {}> extends React.PureComponent<P, S> {\n    /** Component displayName should be `public static`. This property exists to prevent incorrect usage. */\n    protected displayName!: never;\n\n    // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op\n    private timeoutIds: number[] = [];\n\n    constructor(props: P, context?: any) {\n        super(props, context);\n        if (!isNodeEnv(\"production\")) {\n            this.validateProps(this.props);\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: P & { children?: React.ReactNode }) {\n        if (!isNodeEnv(\"production\")) {\n            this.validateProps(nextProps);\n        }\n    }\n\n    public componentWillUnmount() {\n        this.clearTimeouts();\n    }\n\n    /**\n     * Set a timeout and remember its ID.\n     * All stored timeouts will be cleared when component unmounts.\n     *\n     * @returns a \"cancel\" function that will clear timeout when invoked.\n     */\n    public setTimeout(callback: () => void, timeout?: number) {\n        const handle = window.setTimeout(callback, timeout);\n        this.timeoutIds.push(handle);\n        return () => window.clearTimeout(handle);\n    }\n\n    /**\n     * Clear all known timeouts.\n     */\n    public clearTimeouts = () => {\n        if (this.timeoutIds.length > 0) {\n            for (const timeoutId of this.timeoutIds) {\n                window.clearTimeout(timeoutId);\n            }\n            this.timeoutIds = [];\n        }\n    };\n\n    /**\n     * Ensures that the props specified for a component are valid.\n     * Implementations should check that props are valid and usually throw an Error if they are not.\n     * Implementations should not duplicate checks that the type system already guarantees.\n     *\n     * This method should be used instead of React's\n     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.\n     * Like propTypes, these runtime checks run only in development mode.\n     */\n    protected validateProps(_props: P & { children?: React.ReactNode }) {\n        // implement in subclass\n    }\n}\n"]},"metadata":{},"sourceType":"module"}