{"ast":null,"code":"import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.js';\nimport { useTransition } from './use-transition.js';\n\nfunction GroupedTransition(_ref) {\n  let {\n    transitions,\n    duration = 250,\n    exitDuration = duration,\n    mounted,\n    children,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  } = _ref;\n  const {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction\n  } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : null;\n  }\n\n  if (transitionStatus === \"exited\") {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus\n    });\n    return acc;\n  }, {});\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(transitionsStyles));\n}\n\nGroupedTransition.displayName = \"@mantine/core/GroupedTransition\";\nexport { GroupedTransition };","map":{"version":3,"mappings":";;;;AAGO,SAASA,iBAAT,OAWJ;EAAA,IAX+B;IAChCC,WADgC;IAEhCC,QAAQ,GAAG,GAFqB;IAGhCC,YAAY,GAAGD,QAHiB;IAIhCE,OAJgC;IAKhCC,QALgC;IAMhCC,cANgC;IAOhCC,MAPgC;IAQhCC,SARgC;IAShCC,OATgC;IAUhCC;EAVgC,CAW/B;EACD,MAAM;IAAEC,kBAAF;IAAsBC,gBAAtB;IAAwCC;EAAxC,IAAqEC,aAAa,CAAC;IACvFV,OADuF;IAEvFF,QAFuF;IAGvFC,YAHuF;IAIvFG,cAJuF;IAKvFC,MALuF;IAMvFC,SANuF;IAOvFC,OAPuF;IAQvFC;EARuF,CAAD,CAAxF;;EAUA,IAAIC,kBAAkB,KAAK,CAA3B,EAA8B;IAC5B,OAAOP,OAAO,kBAAmBW,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0CZ,QAAQ,CAAC,EAAD,CAAlD,CAAnB,GAA6E,IAA3F;EACD;;EACD,IAAIO,gBAAgB,KAAK,QAAzB,EAAmC;IACjC,OAAO,IAAP;EACD;;EACD,MAAMM,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYnB,WAAZ,EAAyBoB,MAAzB,CAAgC,CAACC,GAAD,EAAMC,UAAN,KAAqB;IAC7ED,GAAG,CAACC,UAAD,CAAH,GAAkBC,mBAAmB,CAAC;MACpCtB,QAAQ,EAAED,WAAW,CAACsB,UAAD,CAAX,CAAwBrB,QADE;MAEpCqB,UAAU,EAAEtB,WAAW,CAACsB,UAAD,CAAX,CAAwBA,UAFA;MAGpCjB,cAAc,EAAEL,WAAW,CAACsB,UAAD,CAAX,CAAwBjB,cAAxB,IAA0CO,wBAHtB;MAIpCY,KAAK,EAAEb;IAJ6B,CAAD,CAArC;IAMA,OAAOU,GAAP;EACD,CARyB,EAQvB,EARuB,CAA1B;EASA,sBAAuBP,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0CZ,QAAQ,CAACa,iBAAD,CAAlD,CAAvB;AACD;;AACDlB,iBAAiB,CAAC0B,WAAlB,GAAgC,iCAAhC","names":["GroupedTransition","transitions","duration","exitDuration","mounted","children","timingFunction","onExit","onEntered","onEnter","onExited","transitionDuration","transitionStatus","transitionTimingFunction","useTransition","React","createElement","Fragment","transitionsStyles","Object","keys","reduce","acc","transition","getTransitionStyles","state","displayName"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/core/src/components/Transition/GroupedTransition.tsx"],"sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\ninterface GroupedTransitionItem {\n  duration: number;\n  timingFunction?: React.CSSProperties['transitionTimingFunction'];\n  transition: MantineTransition;\n}\n\nexport interface GroupedTransitionProps {\n  /** Transitions group */\n  transitions: Record<string, GroupedTransitionItem>;\n\n  /** Render function with transition group styles argument */\n  children(styles: Record<string, React.CSSProperties>): React.ReactElement<any, any>;\n\n  /** Enter transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function GroupedTransition({\n  transitions,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: GroupedTransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : null;\n  }\n\n  if (transitionStatus === 'exited') {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus,\n    });\n\n    return acc;\n  }, {});\n\n  return <>{children(transitionsStyles)}</>;\n}\n\nGroupedTransition.displayName = '@mantine/core/GroupedTransition';\n"]},"metadata":{},"sourceType":"module"}