{"ast":null,"code":"import { useState } from 'react';\n\nfunction useToggle(initialValue, options) {\n  const [state, setState] = useState(initialValue);\n\n  const toggle = value => {\n    if (typeof value !== \"undefined\") {\n      setState(value);\n    } else {\n      setState(current => {\n        if (current === options[0]) {\n          return options[1];\n        }\n\n        return options[0];\n      });\n    }\n  };\n\n  return [state, toggle];\n}\n\nfunction useBooleanToggle() {\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return useToggle(initialValue, [true, false]);\n}\n\nexport { useBooleanToggle, useToggle };","map":{"version":3,"mappings":";;AACO,SAASA,SAAT,CAAmBC,YAAnB,EAAiCC,OAAjC,EAA0C;EAC/C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAACJ,YAAD,CAAlC;;EACA,MAAMK,MAAM,GAAIC,KAAD,IAAW;IACxB,IAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;MAChCH,QAAQ,CAACG,KAAD,CAAR;IACD,CAFD,MAEO;MACLH,QAAQ,CAAEI,OAAD,IAAa;QACpB,IAAIA,OAAO,KAAKN,OAAO,CAAC,CAAD,CAAvB,EAA4B;UAC1B,OAAOA,OAAO,CAAC,CAAD,CAAd;QACD;;QACD,OAAOA,OAAO,CAAC,CAAD,CAAd;MACD,CALO,CAAR;IAMD;EACF,CAXD;;EAYA,OAAO,CAACC,KAAD,EAAQG,MAAR,CAAP;AACD;;AACM,SAASG,gBAAT,GAAgD;EAAA,IAAtBR,YAAsB,uEAAP,KAAO;EACrD,OAAOD,SAAS,CAACC,YAAD,EAAe,CAAC,IAAD,EAAO,KAAP,CAAf,CAAhB;AACF","names":["useToggle","initialValue","options","state","setState","useState","toggle","value","current","useBooleanToggle"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/hooks/src/use-toggle/use-toggle.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useToggle<T>(initialValue: T, options: [T, T]) {\n  const [state, setState] = useState(initialValue);\n\n  const toggle = (value?: React.SetStateAction<T>) => {\n    if (typeof value !== 'undefined') {\n      setState(value);\n    } else {\n      setState((current) => {\n        if (current === options[0]) {\n          return options[1];\n        }\n\n        return options[0];\n      });\n    }\n  };\n\n  return [state, toggle] as const;\n}\n\nexport function useBooleanToggle(initialValue = false) {\n  return useToggle(initialValue, [true, false]);\n}\n"]},"metadata":{},"sourceType":"module"}