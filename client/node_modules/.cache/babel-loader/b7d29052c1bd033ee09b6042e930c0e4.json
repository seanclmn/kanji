{"ast":null,"code":"function filterData(_ref) {\n  let {\n    data,\n    searchable,\n    limit,\n    searchValue,\n    filter,\n    value,\n    filterDataOnExactSearchMatch\n  } = _ref;\n\n  if (!searchable) {\n    return data;\n  }\n\n  const selected = value != null ? data.find(item => item.value === value) || null : null;\n\n  if (selected && !filterDataOnExactSearchMatch && (selected == null ? void 0 : selected.label) === searchValue) {\n    return data;\n  }\n\n  const result = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(searchValue, data[i])) {\n      result.push(data[i]);\n    }\n\n    if (result.length >= limit) {\n      break;\n    }\n  }\n\n  return result;\n}\n\nexport { filterData };","map":{"version":3,"mappings":"AAAO,SAASA,UAAT,OAQJ;EAAA,IARwB;IACzBC,IADyB;IAEzBC,UAFyB;IAGzBC,KAHyB;IAIzBC,WAJyB;IAKzBC,MALyB;IAMzBC,KANyB;IAOzBC;EAPyB,CAQxB;;EACD,IAAI,CAACL,UAAL,EAAiB;IACf,OAAOD,IAAP;EACD;;EACD,MAAMO,QAAQ,GAAGF,KAAK,IAAI,IAAT,GAAgBL,IAAI,CAACQ,IAAL,CAAWC,IAAD,IAAUA,IAAI,CAACJ,KAAL,KAAeA,KAAnC,KAA6C,IAA7D,GAAoE,IAArF;;EACA,IAAIE,QAAQ,IAAI,CAACD,4BAAb,IAA6C,CAACC,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACG,KAAtC,MAAiDP,WAAlG,EAA+G;IAC7G,OAAOH,IAAP;EACD;;EACD,MAAMW,MAAM,GAAG,EAAf;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACa,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;IACvC,IAAIR,MAAM,CAACD,WAAD,EAAcH,IAAI,CAACY,CAAD,CAAlB,CAAV,EAAkC;MAChCD,MAAM,CAACG,IAAP,CAAYd,IAAI,CAACY,CAAD,CAAhB;IACD;;IACD,IAAID,MAAM,CAACE,MAAP,IAAiBX,KAArB,EAA4B;MAC1B;IACD;EACF;;EACD,OAAOS,MAAP;AACF","names":["filterData","data","searchable","limit","searchValue","filter","value","filterDataOnExactSearchMatch","selected","find","item","label","result","i","length","push"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/core/src/components/Select/filter-data/filter-data.ts"],"sourcesContent":["import type { SelectItem } from '../types';\n\ninterface FilterData {\n  data: SelectItem[];\n  limit: number;\n  searchable: boolean;\n  searchValue: string;\n  filterDataOnExactSearchMatch: boolean;\n  value: string;\n  filter(value: string, item: SelectItem): boolean;\n}\n\nexport function filterData({\n  data,\n  searchable,\n  limit,\n  searchValue,\n  filter,\n  value,\n  filterDataOnExactSearchMatch,\n}: FilterData) {\n  if (!searchable) {\n    return data;\n  }\n\n  const selected = value != null ? data.find((item) => item.value === value) || null : null;\n\n  if (selected && !filterDataOnExactSearchMatch && selected?.label === searchValue) {\n    return data;\n  }\n\n  const result = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(searchValue, data[i])) {\n      result.push(data[i]);\n    }\n\n    if (result.length >= limit) {\n      break;\n    }\n  }\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}