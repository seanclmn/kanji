{"ast":null,"code":"import { useState, useRef, useCallback, useEffect } from 'react';\n\nfunction useHover() {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef(null);\n  const onMouseEnter = useCallback(() => setHovered(true), []);\n  const onMouseLeave = useCallback(() => setHovered(false), []);\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.addEventListener(\"mouseenter\", onMouseEnter);\n      ref.current.addEventListener(\"mouseleave\", onMouseLeave);\n      return () => {\n        var _a, _b;\n\n        (_a = ref.current) == null ? void 0 : _a.removeEventListener(\"mouseenter\", onMouseEnter);\n        (_b = ref.current) == null ? void 0 : _b.removeEventListener(\"mouseleave\", onMouseLeave);\n      };\n    }\n\n    return void 0;\n  }, []);\n  return {\n    ref,\n    hovered\n  };\n}\n\nexport { useHover };","map":{"version":3,"mappings":";;AACO,SAASA,QAAT,GAAoB;EACzB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMC,GAAG,GAAGC,MAAM,CAAC,IAAD,CAAlB;EACA,MAAMC,YAAY,GAAGC,WAAW,CAAC,MAAML,UAAU,CAAC,IAAD,CAAjB,EAAyB,EAAzB,CAAhC;EACA,MAAMM,YAAY,GAAGD,WAAW,CAAC,MAAML,UAAU,CAAC,KAAD,CAAjB,EAA0B,EAA1B,CAAhC;EACAO,SAAS,CAAC,MAAM;IACd,IAAIL,GAAG,CAACM,OAAR,EAAiB;MACfN,GAAG,CAACM,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CL,YAA3C;MACAF,GAAG,CAACM,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CH,YAA3C;MACA,OAAO,MAAM;QACX,IAAII,EAAJ,EAAQC,EAAR;;QACA,CAACD,EAAE,GAAGR,GAAG,CAACM,OAAV,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsCE,EAAE,CAACE,mBAAH,CAAuB,YAAvB,EAAqCR,YAArC,CAAtC;QACA,CAACO,EAAE,GAAGT,GAAG,CAACM,OAAV,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsCG,EAAE,CAACC,mBAAH,CAAuB,YAAvB,EAAqCN,YAArC,CAAtC;MACD,CAJD;IAKD;;IACD,OAAO,KAAK,CAAZ;EACD,CAXQ,EAWN,EAXM,CAAT;EAYA,OAAO;IAAEJ,GAAF;IAAOH;EAAP,CAAP;AACF","names":["useHover","hovered","setHovered","useState","ref","useRef","onMouseEnter","useCallback","onMouseLeave","useEffect","current","addEventListener","_a","_b","removeEventListener"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/hooks/src/use-hover/use-hover.ts"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nexport function useHover<T extends HTMLElement = HTMLDivElement>() {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef<T>(null);\n  const onMouseEnter = useCallback(() => setHovered(true), []);\n  const onMouseLeave = useCallback(() => setHovered(false), []);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.addEventListener('mouseenter', onMouseEnter);\n      ref.current.addEventListener('mouseleave', onMouseLeave);\n\n      return () => {\n        ref.current?.removeEventListener('mouseenter', onMouseEnter);\n        ref.current?.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n\n    return undefined;\n  }, []);\n\n  return { ref, hovered };\n}\n"]},"metadata":{},"sourceType":"module"}