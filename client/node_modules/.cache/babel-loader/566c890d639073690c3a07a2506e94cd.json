{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal.js';\n\nfunction shallowCompare(prevValue, currValue) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies) {\n  const ref = useRef([]);\n  const updateRef = useRef(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nfunction useShallowEffect(cb, dependencies) {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n\nexport { useShallowEffect };","map":{"version":3,"mappings":";;;AAEA,SAASA,cAAT,CAAwBC,SAAxB,EAAmCC,SAAnC,EAA8C;EAC5C,IAAI,CAACD,SAAD,IAAc,CAACC,SAAnB,EAA8B;IAC5B,OAAO,KAAP;EACD;;EACD,IAAID,SAAS,KAAKC,SAAlB,EAA6B;IAC3B,OAAO,IAAP;EACD;;EACD,IAAID,SAAS,CAACE,MAAV,KAAqBD,SAAS,CAACC,MAAnC,EAA2C;IACzC,OAAO,KAAP;EACD;;EACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACE,MAA9B,EAAsCC,CAAC,IAAI,CAA3C,EAA8C;IAC5C,IAAI,CAACC,YAAY,CAACJ,SAAS,CAACG,CAAD,CAAV,EAAeF,SAAS,CAACE,CAAD,CAAxB,CAAjB,EAA+C;MAC7C,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD;;AACD,SAASE,iBAAT,CAA2BC,YAA3B,EAAyC;EACvC,MAAMC,GAAG,GAAGC,MAAM,CAAC,EAAD,CAAlB;EACA,MAAMC,SAAS,GAAGD,MAAM,CAAC,CAAD,CAAxB;;EACA,IAAI,CAACT,cAAc,CAACQ,GAAG,CAACG,OAAL,EAAcJ,YAAd,CAAnB,EAAgD;IAC9CC,GAAG,CAACG,OAAJ,GAAcJ,YAAd;IACAG,SAAS,CAACC,OAAV,IAAqB,CAArB;EACD;;EACD,OAAO,CAACD,SAAS,CAACC,OAAX,CAAP;AACD;;AACM,SAASC,gBAAT,CAA0BC,EAA1B,EAA8BN,YAA9B,EAA4C;EACjDO,SAAS,CAACD,EAAD,EAAKP,iBAAiB,CAACC,YAAD,CAAtB,CAAT;AACF","names":["shallowCompare","prevValue","currValue","length","i","shallowEqual","useShallowCompare","dependencies","ref","useRef","updateRef","current","useShallowEffect","cb","useEffect"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/hooks/src/use-shallow-effect/use-shallow-effect.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal';\n\nfunction shallowCompare(prevValue: React.DependencyList, currValue: React.DependencyList) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies: React.DependencyList) {\n  const ref = useRef<React.DependencyList>([]);\n  const updateRef = useRef<number>(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nexport function useShallowEffect(cb: () => void, dependencies?: React.DependencyList): void {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n"]},"metadata":{},"sourceType":"module"}