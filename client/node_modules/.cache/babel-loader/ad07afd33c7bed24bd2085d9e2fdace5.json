{"ast":null,"code":"import { Children } from 'react';\n\nfunction filterChildrenByType(children, type) {\n  return Children.toArray(children).filter(item => Array.isArray(type) ? type.some(component => component === item.type) : item.type === type);\n}\n\nexport { filterChildrenByType };","map":{"version":3,"mappings":";;AACO,SAASA,oBAAT,CAA8BC,QAA9B,EAAwCC,IAAxC,EAA8C;EACnD,OAAOC,QAAQ,CAACC,OAAT,CAAiBH,QAAjB,EAA2BI,MAA3B,CAAmCC,IAAD,IAAUC,KAAK,CAACC,OAAN,CAAcN,IAAd,IAAsBA,IAAI,CAACO,IAAL,CAAWC,SAAD,IAAeA,SAAS,KAAKJ,IAAI,CAACJ,IAA5C,CAAtB,GAA0EI,IAAI,CAACJ,IAAL,KAAcA,IAApI,CAAP;AACF","names":["filterChildrenByType","children","type","Children","toArray","filter","item","Array","isArray","some","component"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/core/src/utils/filter-children-by-type/filter-children-by-type.ts"],"sourcesContent":["import { Children, JSXElementConstructor, ReactNode, ReactElement } from 'react';\n\nexport function filterChildrenByType(\n  children: ReactNode,\n  type: JSXElementConstructor<any> | JSXElementConstructor<any>[]\n) {\n  return (Children.toArray(children) as ReactElement[]).filter((item) =>\n    Array.isArray(type) ? type.some((component) => component === item.type) : item.type === type\n  );\n}\n"]},"metadata":{},"sourceType":"module"}