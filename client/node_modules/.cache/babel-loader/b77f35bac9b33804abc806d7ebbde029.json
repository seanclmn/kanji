{"ast":null,"code":"//@ts-nocheck\n// Hooks\nimport FetchGradeKanji from './FetchGradeKanji';\nexport function shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\nexport const FetchQuizAnswers = (kanjiLevel, questions) => {\n  const questionsArray = [];\n\n  const fetchWrongAnswers = (kanjiLevel, answerLength) => {\n    const answers = [];\n    const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData;\n\n    const fetchWrongAnswer = () => {\n      const wrongAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n      answers.push(wrongAnswer);\n\n      if (answers.length < answerLength - 1) {\n        fetchWrongAnswer();\n      }\n    };\n\n    fetchWrongAnswer();\n    return answers;\n  };\n\n  for (let i = 0; i < questions; i++) {\n    questionsArray.push({\n      question: \"here's a question son\",\n      answers: fetchWrongAnswers(kanjiLevel, 4)\n    });\n  }\n\n  return shuffle(questionsArray);\n};\n_c = FetchQuizAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchQuizAnswers\");","map":{"version":3,"names":["FetchGradeKanji","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","FetchQuizAnswers","kanjiLevel","questions","questionsArray","fetchWrongAnswers","answerLength","answers","kanjiArray","gradeKanjiData","fetchWrongAnswer","wrongAnswer","push","i","question"],"sources":["/Users/seancoleman/Projects/kanji/src/hooks/FetchQuizAnswers.tsx"],"sourcesContent":["//@ts-nocheck\nimport {useEffect,useState } from 'react'\n\n// Hooks\nimport FetchGradeKanji from './FetchGradeKanji'\n\nexport function shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nexport const FetchQuizAnswers = (kanjiLevel:number,questions:number) => {\n  const questionsArray:Array[] = []\n\n  const fetchWrongAnswers = (kanjiLevel,answerLength) => {\n    const answers:string[] = []\n    const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData\n  \n    const fetchWrongAnswer = () => {\n      const wrongAnswer = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\n      answers.push(wrongAnswer)\n\n      if(answers.length < answerLength-1){\n        fetchWrongAnswer()\n      }\n    }\n\n    fetchWrongAnswer()\n    return answers\n\n  }\n\n  for(let i=0;i<questions;i++) {\n    questionsArray.push({ \n      question: \"here's a question son\",\n      answers: fetchWrongAnswers(kanjiLevel,4)\n    })\n  }\n\n  return(shuffle(questionsArray))\n}"],"mappings":"AAAA;AAGA;AACA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAC7B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;EAAA,IAAkCC,WAAlC,CAD6B,CAG7B;;EACA,OAAOF,YAAY,IAAI,CAAvB,EAA0B;IAExB;IACAE,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;IACAA,YAAY,GAJY,CAMxB;;IACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EACtBH,KAAK,CAACC,YAAD,CADiB,CAA5C;EAED;;EAED,OAAOD,KAAP;AACD;AAED,OAAO,MAAMO,gBAAgB,GAAG,CAACC,UAAD,EAAmBC,SAAnB,KAAwC;EACtE,MAAMC,cAAsB,GAAG,EAA/B;;EAEA,MAAMC,iBAAiB,GAAG,CAACH,UAAD,EAAYI,YAAZ,KAA6B;IACrD,MAAMC,OAAgB,GAAG,EAAzB;IACA,MAAMC,UAAU,GAAGhB,eAAe,CAACU,UAAD,CAAf,CAA4BO,cAA/C;;IAEA,MAAMC,gBAAgB,GAAG,MAAM;MAC7B,MAAMC,WAAW,GAAGH,UAAU,CAACV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcQ,UAAU,CAACZ,MAApC,CAAD,CAA9B;MACAW,OAAO,CAACK,IAAR,CAAaD,WAAb;;MAEA,IAAGJ,OAAO,CAACX,MAAR,GAAiBU,YAAY,GAAC,CAAjC,EAAmC;QACjCI,gBAAgB;MACjB;IACF,CAPD;;IASAA,gBAAgB;IAChB,OAAOH,OAAP;EAED,CAhBD;;EAkBA,KAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACV,SAAd,EAAwBU,CAAC,EAAzB,EAA6B;IAC3BT,cAAc,CAACQ,IAAf,CAAoB;MAClBE,QAAQ,EAAE,uBADQ;MAElBP,OAAO,EAAEF,iBAAiB,CAACH,UAAD,EAAY,CAAZ;IAFR,CAApB;EAID;;EAED,OAAOT,OAAO,CAACW,cAAD,CAAd;AACD,CA7BM;KAAMH,gB"},"metadata":{},"sourceType":"module"}