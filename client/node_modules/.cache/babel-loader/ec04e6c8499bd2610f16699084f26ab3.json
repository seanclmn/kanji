{"ast":null,"code":"const correctAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n// Hooks\nimport FetchGradeKanji from './FetchGradeKanji';\nexport function shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\nexport const fetchWrongAnswer = (answer, kanjiArray, answerLength) => {\n  const answers = [];\n  const wrongAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n\n  if (wrongAnswer !== answer) {\n    answers.push(wrongAnswer);\n  }\n\n  if (answers.length < answerLength - 1) {\n    fetchWrongAnswer(answer);\n  } else {\n    answers.push(answer);\n    return answers;\n  }\n};\nexport const fetchAnswerOptions = (kanjiLevel, answerLength) => {\n  const questionsArray = [];\n  const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData;\n  const correctAnswer = kanjiArray[Math.floor(Math.random() * kanjiArray.length)];\n\n  for (let i = 0; i < questions; i++) {\n    questionsArray.push({\n      question: \"here's a question son\",\n      answers: fetchWrongAnswers(correctAnswer, kanjiArray, 4)\n    });\n  }\n\n  return questionsArray;\n};\nexport const FetchQuizAnswers = (kanjiLevel, questions) => {\n  return questionsArray;\n};\n_c = FetchQuizAnswers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchQuizAnswers\");","map":{"version":3,"names":["correctAnswer","kanjiArray","Math","floor","random","length","FetchGradeKanji","shuffle","array","currentIndex","randomIndex","fetchWrongAnswer","answer","answerLength","answers","wrongAnswer","push","fetchAnswerOptions","kanjiLevel","questionsArray","gradeKanjiData","i","questions","question","fetchWrongAnswers","FetchQuizAnswers"],"sources":["/Users/seancoleman/Projects/kanji/src/hooks/FetchQuizAnswers.tsx"],"sourcesContent":["const correctAnswer = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\nimport {useEffect,useState } from 'react'\n\n// Hooks\nimport FetchGradeKanji from './FetchGradeKanji'\n\nexport function shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\n\nexport const fetchWrongAnswer = (answer: string,kanjiArray:string[],answerLength:number) => {\n  const answers:string[] = []\n  const wrongAnswer = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\n  \n  if(wrongAnswer!==answer){\n    answers.push(wrongAnswer)!\n  }\n\n  if(answers.length < answerLength-1){\n    fetchWrongAnswer(answer)\n  }\n  else {\n    answers.push(answer)\n    return(answers)\n  }\n}\n\nexport const fetchAnswerOptions = (kanjiLevel:number,answerLength:number) => {\n\n  const questionsArray:string[][] = []\n  const kanjiArray = FetchGradeKanji(kanjiLevel).gradeKanjiData\n  const correctAnswer: string = kanjiArray[Math.floor(Math.random()*kanjiArray.length)]\n\n\n  for(let i=0;i<questions;i++) {\n\n    questionsArray.push({ \n      question: \"here's a question son\",\n      answers: fetchWrongAnswers(correctAnswer,kanjiArray,4)\n    })\n  }\n\n  return questionsArray\n\n}\n\nexport const FetchQuizAnswers = (kanjiLevel:number,questions:number) => {\n\n  return(questionsArray)\n}"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,UAAU,CAACI,MAApC,CAAD,CAAhC;AAGA;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAC7B,IAAIC,YAAY,GAAGD,KAAK,CAACH,MAAzB;EAAA,IAAkCK,WAAlC,CAD6B,CAG7B;;EACA,OAAOD,YAAY,IAAI,CAAvB,EAA0B;IAExB;IACAC,WAAW,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBK,YAA3B,CAAd;IACAA,YAAY,GAJY,CAMxB;;IACA,CAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACE,WAAD,CAA3B,IAA4C,CAC1CF,KAAK,CAACE,WAAD,CADqC,EACtBF,KAAK,CAACC,YAAD,CADiB,CAA5C;EAED;;EAED,OAAOD,KAAP;AACD;AAGD,OAAO,MAAMG,gBAAgB,GAAG,CAACC,MAAD,EAAgBX,UAAhB,EAAoCY,YAApC,KAA4D;EAC1F,MAAMC,OAAgB,GAAG,EAAzB;EACA,MAAMC,WAAW,GAAGd,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,UAAU,CAACI,MAApC,CAAD,CAA9B;;EAEA,IAAGU,WAAW,KAAGH,MAAjB,EAAwB;IACtBE,OAAO,CAACE,IAAR,CAAaD,WAAb;EACD;;EAED,IAAGD,OAAO,CAACT,MAAR,GAAiBQ,YAAY,GAAC,CAAjC,EAAmC;IACjCF,gBAAgB,CAACC,MAAD,CAAhB;EACD,CAFD,MAGK;IACHE,OAAO,CAACE,IAAR,CAAaJ,MAAb;IACA,OAAOE,OAAP;EACD;AACF,CAfM;AAiBP,OAAO,MAAMG,kBAAkB,GAAG,CAACC,UAAD,EAAmBL,YAAnB,KAA2C;EAE3E,MAAMM,cAAyB,GAAG,EAAlC;EACA,MAAMlB,UAAU,GAAGK,eAAe,CAACY,UAAD,CAAf,CAA4BE,cAA/C;EACA,MAAMpB,aAAqB,GAAGC,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,UAAU,CAACI,MAApC,CAAD,CAAxC;;EAGA,KAAI,IAAIgB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,SAAd,EAAwBD,CAAC,EAAzB,EAA6B;IAE3BF,cAAc,CAACH,IAAf,CAAoB;MAClBO,QAAQ,EAAE,uBADQ;MAElBT,OAAO,EAAEU,iBAAiB,CAACxB,aAAD,EAAeC,UAAf,EAA0B,CAA1B;IAFR,CAApB;EAID;;EAED,OAAOkB,cAAP;AAED,CAjBM;AAmBP,OAAO,MAAMM,gBAAgB,GAAG,CAACP,UAAD,EAAmBI,SAAnB,KAAwC;EAEtE,OAAOH,cAAP;AACD,CAHM;KAAMM,gB"},"metadata":{},"sourceType":"module"}