{"ast":null,"code":"import { useMantineTheme, useCss } from '@mantine/styles';\nimport { getSystemStyles } from './get-system-styles/get-system-styles.js';\n\nfunction extractSx(sx, theme) {\n  return typeof sx === \"function\" ? sx(theme) : sx;\n}\n\nfunction useSx(sx, systemProps, className) {\n  const theme = useMantineTheme();\n  const {\n    css,\n    cx\n  } = useCss();\n\n  if (Array.isArray(sx)) {\n    return cx(className, css(getSystemStyles(systemProps, theme)), sx.map(partial => css(extractSx(partial, theme))));\n  }\n\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\n\nexport { useSx };","map":{"version":3,"mappings":";;;AAKA,SAASA,SAAT,CAAmBC,EAAnB,EAAuBC,KAAvB,EAA8B;EAC5B,OAAO,OAAOD,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACC,KAAD,CAA7B,GAAuCD,EAA9C;AACD;;AACM,SAASE,KAAT,CAAeF,EAAf,EAAmBG,WAAnB,EAAgCC,SAAhC,EAA2C;EAChD,MAAMH,KAAK,GAAGI,eAAe,EAA7B;EACA,MAAM;IAAEC,GAAF;IAAOC;EAAP,IAAcC,MAAM,EAA1B;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcV,EAAd,CAAJ,EAAuB;IACrB,OAAOO,EAAE,CAACH,SAAD,EAAYE,GAAG,CAACK,eAAe,CAACR,WAAD,EAAcF,KAAd,CAAhB,CAAf,EAAsDD,EAAE,CAACY,GAAH,CAAQC,OAAD,IAAaP,GAAG,CAACP,SAAS,CAACc,OAAD,EAAUZ,KAAV,CAAV,CAAvB,CAAtD,CAAT;EACD;;EACD,OAAOM,EAAE,CAACH,SAAD,EAAYE,GAAG,CAACP,SAAS,CAACC,EAAD,EAAKC,KAAL,CAAV,CAAf,EAAuCK,GAAG,CAACK,eAAe,CAACR,WAAD,EAAcF,KAAd,CAAhB,CAA1C,CAAT;AACF","names":["extractSx","sx","theme","useSx","systemProps","className","useMantineTheme","css","cx","useCss","Array","isArray","getSystemStyles","map","partial"],"sources":["/Users/seancoleman/Projects/kanji/client/node_modules/@mantine/core/src/components/Box/use-sx/use-sx.ts"],"sourcesContent":["import {\n  MantineStyleSystemProps,\n  MantineTheme,\n  Sx,\n  useCss,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { getSystemStyles } from './get-system-styles/get-system-styles';\n\nfunction extractSx(sx: Sx, theme: MantineTheme) {\n  return typeof sx === 'function' ? sx(theme) : sx;\n}\n\nexport function useSx(sx: Sx | Sx[], systemProps: MantineStyleSystemProps, className: string) {\n  const theme = useMantineTheme();\n  const { css, cx } = useCss();\n\n  if (Array.isArray(sx)) {\n    return cx(\n      className,\n      css(getSystemStyles(systemProps, theme)),\n      sx.map((partial) => css(extractSx(partial, theme)))\n    );\n  }\n\n  return cx(className, css(extractSx(sx, theme)), css(getSystemStyles(systemProps, theme)));\n}\n"]},"metadata":{},"sourceType":"module"}