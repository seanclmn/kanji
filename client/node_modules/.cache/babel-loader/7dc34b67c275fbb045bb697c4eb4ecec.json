{"ast":null,"code":"import { useEffect } from 'react';\n\nfunction useWindowEvent(type, listener, options) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, []);\n}\n\nexport { useWindowEvent };","map":{"version":3,"mappings":";;AACO,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiD;EACtDC,SAAS,CAAC,MAAM;IACdC,MAAM,CAACC,gBAAP,CAAwBL,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC;IACA,OAAO,MAAME,MAAM,CAACE,mBAAP,CAA2BN,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C,CAAb;EACD,CAHQ,EAGN,EAHM,CAAT;AAIF","names":["useWindowEvent","type","listener","options","useEffect","window","addEventListener","removeEventListener"],"sources":["/Users/seancoleman/Projects/kanji/node_modules/@mantine/hooks/src/use-window-event/use-window-event.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nexport function useWindowEvent<K extends string>(\n  type: K,\n  listener: K extends keyof WindowEventMap\n    ? (this: Window, ev: WindowEventMap[K]) => void\n    : (this: Window, ev: CustomEvent) => void,\n  options?: boolean | AddEventListenerOptions\n) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, []);\n}\n"]},"metadata":{},"sourceType":"module"}